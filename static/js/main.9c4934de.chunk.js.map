{"version":3,"sources":["actionCreators/mobileMenu.js","variables/actionTypes.js","variables/path.js","components/PageHeader.js","redmine/getAuthorization.js","actionCreators/storeAuthorization.js","components/Input.js","pages/Login.js","actionCreators/userInfo.js","redmine/getTasks.js","redmine/getTypeActivity.js","MyTheme.js","redmine/timeEntries.js","actionCreators/notice.js","components/Notice.js","components/Task.js","actionCreators/notSavedData.js","pages/Tasks.js","actionCreators/tasks.js","actionCreators/activities.js","components/PieChart.js","redmine/getStatistics.js","functions/commandGetStatistics.js","pages/Statistics.js","actionCreators/statistics.js","actionCreators/modal.js","components/Preloader.js","components/Modal.js","components/MobileMenu.js","App.js","actionCreators/storeLogin.js","serviceWorker.js","startingValue.js","store/mainStore.js","reducers/reducer.js","index.js"],"names":["mobileMenu","value","type","gitHubPagesName","ElevationScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","PageHeader","showMobileMenu","dispatchMobileMenu","Box","className","component","position","bgcolor","color","Toolbar","Hidden","mdUp","IconButton","onClick","this","edge","aria-label","smDown","to","Button","Typography","variant","name","Component","connect","state","authorized","user","userLogin","dispatch","getAuthorization","key","newUrl","newApiOrLogin","pass","request","url","localStorage","getItem","apiOrLogin","requestParams","auth","username","password","axios","get","then","response","catch","error","console","log","storeAuthorization","Input","Icon","IconsLib","icon","TextField","label","title","placeholder","onInput","InputProps","startAdornment","InputAdornment","Login","switchLogInByApi","setState","logInByApi","api","login","setAuthorization","e","data","apiKey","api_key","setItem","dispatchAuthorization","dispatchUserInfo","alert","updComponent","handleSubmit","preventDefault","setUrl","trim","endsWith","substring","length","setApi","setLogin","setPass","loginPass","onSubmit","mx","display","flexDirection","FormControlLabel","control","Switch","checked","onChange","size","disabled","userInfo","getTasks","getTypeActivity","createMuiTheme","palette","primary","main","dark","light","contrastText","secondary","text","overrides","MuiButton","root","minWidth","stop","timeEntries","id","time","activity","comment","time_entry","issue_id","hours","activity_id","comments","post","notice","show","Notice","close","dispatchNotice","Snackbar","open","autoHideDuration","onClose","Alert","severity","application","redTheme","MyTheme","Task","changeActivity","changeComment","switchPlay","play","startTimer","dispatchNotSavedData","stopTimer","milliseconds","toFixed","entries","feedback","timer","Object","keys","activities","classes","activityKeys","activityValues","values","map","elem","i","MenuItem","ExpansionPanel","ExpansionPanelSummary","expandIcon","Grid","container","spacing","item","xs","sm","md","project","gutterBottom","subject","alignItems","justify","startImmediately","formatValue","onStart","start","resume","pause","reset","getTime","getTimerState","theme","notSavedData","stopPropagation","m","Hours","Minutes","Seconds","ExpansionPanelDetails","multiline","fullWidth","inputProps","maxLength","mb","FormControl","Select","priority","Chip","estimated_hours","spent_hours","start_date","due_date","withStyles","background","width","Tasks","showCurrentComponent","setTasks","setActivities","tasks","issues","dispatchTasks","setLoaded","time_entry_activities","result","forEach","dispatchActivities","isLoading","tasksList","index","status","skeleton","my","Skeleton","height","PieChart","percent","styles","buildStyles","textColor","pathColor","trailColor","CircularProgress","getStatistics","period","date","Date","_year","getFullYear","_month","getMonth","_day","getDate","_weekday","getDay","_firstDayWeek","today","weekStarted","periodToday","periodWeek","periodMonth","lastN","monthCommands","n","command","n1","push","n2","n3","lastCommandForMonth","getMonthCommands","Statistics","isLoadingName","setStatistics","time_entries","dispatchStatistics","month","isLoadingDay","isLoadingWeek","isLoadingMonth","dayPercent","day","weekPercent","week","monthPercent","statistics","modal","Preloader","Modal","dispatchModal","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","MobileMenu","closeDrawer","Drawer","anchor","List","ListItem","App","handleWindowBeforeUnload","returnValue","dispatchLogin","removeItem","toggleDrawer","side","showDrawer","addEventListener","removeEventListener","exact","path","render","when","message","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","startingValue","redmineUrl","store","createStore","action","assign","states","ReactDOM","mainStore","document","getElementById","URL","process","href","origin","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8YAIO,SAASA,EAAWC,GACzB,MAAO,CACLC,KCK2B,kBDJ3BD,SELG,IAAME,EAAkB,uB,QC0C/B,SAASC,EAAgBC,GAAQ,IACvBC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,OACZC,EAAUC,YAAiB,CAC/BC,mBAAmB,EACnBC,UAAW,EACXC,OAAQL,EAASA,SAAWM,IAG9B,OAAOC,IAAMC,aAAaT,EAAU,CAClCU,UAAWR,EAAU,EAAI,I,IAKvBS,E,YACJ,WAAYZ,GAAQ,IAAD,8BACjB,4CAAMA,KAGRa,eAAiB,WACf,EAAKb,MAAMc,oBAAmB,IALb,E,sEASjB,OACE,kBAACf,EAAD,KACE,kBAACgB,EAAA,EAAD,CACEC,UAAW,cACXC,UAAW,SACXC,SAAS,QACTC,QAAQ,eACRC,MAAM,gBAEN,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAQC,MAAI,GACV,kBAACC,EAAA,EAAD,CACEC,QAASC,KAAKb,eACdc,KAAK,QACLC,aAAW,OACXR,MAAM,WACN,kBAAC,IAAD,QAIJ,kBAACE,EAAA,EAAD,CAAQO,QAAM,GACZ,kBAAC,IAAD,CAAMC,GAAE,WAAMhC,EAAN,UAA+BkB,UAAW,oBAChD,kBAACe,EAAA,EAAD,CAAQX,MAAM,WAAd,yCAKF,kBAAC,IAAD,CAAMU,GAAE,WAAMhC,EAAN,eAAoCkB,UAAW,oBACrD,kBAACe,EAAA,EAAD,CAAQX,MAAM,WAAd,kEAMJ,kBAACY,EAAA,EAAD,CAAYC,QAAQ,QAAQb,MAAM,UAAUJ,UAAW,iBACpDU,KAAK1B,MAAMkC,a,GA9CDzB,IAAM0B,WAwDhBC,eAnFS,SAACC,GACvB,MAAO,CACLC,cAAeD,EAAMC,WACrBJ,KAAMG,EAAME,KAAKC,cAIM,SAAAC,GACzB,MAAO,CACL3B,mBAAoB,SAAClB,GAAD,OAAW6C,EAAS9C,EAAWC,QA0ExCwC,CAA6CxB,G,iBC/E7C8B,MAjCf,SAA0BC,EAAKC,EAAQC,EAAeC,GACpD,IAGIC,EAHEC,EAAMJ,GAAkBK,aAAaC,QAAQ,OAC7CC,EAAaN,GAAgCI,aAAaC,QAAQ,OAGpEE,EAAgB,GAEpB,OAAQT,GACN,IAAK,MACHI,EAAO,UAAMC,EAAN,mCAAoCG,GAC3C,MACF,IAAK,QACHJ,EAAO,UAAMC,EAAN,uBACPI,EAAgB,CACdC,KAAM,CACJC,SAAUH,EACVI,SAAUT,IAQlB,OAAOU,IAAMC,IAAIV,EAASK,GACvBM,MAAK,SAAAC,GACJ,OAAOA,KAERC,OAAM,SAAUC,GACfC,QAAQC,IAAI,4BAA6BF,O,SC7BxC,SAASG,EAAmB1B,GACjC,MAAO,CACLzC,KJG0B,iBIF1ByC,WAAYA,G,uCCmCD2B,E,YA7Bb,WAAYjE,GAAQ,qEACZA,I,sEAKN,IAAMkE,EAAOC,EAASzC,KAAK1B,MAAMoE,MAEjC,OACE,kBAACC,EAAA,EAAD,CACAC,MAAO5C,KAAK1B,MAAMsE,MAClBC,MAAO7C,KAAK1B,MAAMsE,MAClBzE,KAAM6B,KAAK1B,MAAMH,KAAO6B,KAAK1B,MAAMH,KAAO,OAC1CuB,MAAM,YACNoD,YAAa9C,KAAK1B,MAAMwE,YACxBvC,QAAQ,WACRwC,QAAS/C,KAAK1B,MAAMyE,QACpBC,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgB1D,SAAS,SACvB,kBAACgD,EAAD,c,GArBQzD,IAAM0B,WCmBpB0C,E,YACJ,WAAY7E,GAAQ,IAAD,8BACjB,4CAAMA,KAWR8E,iBAAmB,WACjB,EAAKC,SAAS,CAAEC,YAAa,EAAK3C,MAAM2C,aAExC,EAAKD,SAAS,CACZE,IAAK,GACLC,MAAO,GACP3B,SAAU,MAlBK,EAsBnB4B,iBAAmB,SAAAxB,GACjBA,EAASD,MAAK,SAAA0B,GACZ,GAAIA,EAAG,CACL,IAAIF,EAAQE,EAAEC,KAAK9C,KAAK2C,MACpBI,EAASF,EAAEC,KAAK9C,KAAKgD,QAEzBtC,aAAauC,QAAQ,MAAO,EAAKnD,MAAMW,KACvCC,aAAauC,QAAQ,MAAOF,GAC5BrC,aAAauC,QAAQ,QAASN,GAE9B,EAAKlF,MAAMyF,uBAAsB,GAEjC,EAAKzF,MAAM0F,iBAAiBR,EAAOI,EAAQ,EAAKjD,MAAMW,UAEtD2C,MAAM,6FApCO,EAyCnBC,aAAe,WACb,IAAIhG,EAEFA,EADE,EAAKyC,MAAM2C,WACLtC,EAAiB,MAAO,EAAKL,MAAMW,IAAK,EAAKX,MAAM4C,KAEnDvC,EAAiB,QAAS,EAAKL,MAAMW,IAAK,EAAKX,MAAM6C,MAAO,EAAK7C,MAAMkB,UAGjF,EAAK4B,iBAAiBvF,IAjDL,EAoDnBiG,aAAe,SAAAT,GACbA,EAAEU,iBACF,EAAKF,aAAa,EAAKvD,MAAMW,IAAK,EAAKX,MAAM4C,MAtD5B,EAyDnBc,OAAS,SAAAX,GACP,IAAIpC,EAAMoC,EAAE7E,OAAOX,MAAMoG,OACrBhD,EAAIiD,SAAS,OACfjD,EAAMA,EAAIkD,UAAU,EAAGlD,EAAImD,OAAS,IAEtC,EAAKpB,SAAS,CAAE/B,IAAKA,KA9DJ,EAiEnBoD,OAAS,SAAAhB,GACP,EAAKL,SAAS,CAAEE,IAAKG,EAAE7E,OAAOX,MAAMoG,UAlEnB,EAqEnBK,SAAW,SAAAjB,GACT,EAAKL,SAAS,CAAEG,MAAOE,EAAE7E,OAAOX,MAAMoG,UAtErB,EAyEnBM,QAAU,SAAAlB,GACR,EAAKL,SAAS,CAAExB,SAAU6B,EAAE7E,OAAOX,MAAMoG,UAvEzC,EAAK3D,MAAQ,CACX2C,YAAY,EACZhC,IAAK,GACLiC,IAAK,GACLC,MAAO,GACP3B,SAAU,IARK,E,sEA8EjB,IAAMgD,EACJ,oCACE,kBAAC,EAAD,CACEjC,MAAM,iCACNE,YAAY,iCACZC,QAAS/C,KAAK2E,SACdjC,KAAM,aAGR,kBAAC,EAAD,CACEE,MAAM,uCACNE,YAAY,OACZ3E,KAAM,WACN4E,QAAS/C,KAAK4E,QACdlC,KAAM,YAKNa,EACJ,kBAAC,EAAD,CACEX,MAAM,cACNE,YAAY,UACZC,QAAS/C,KAAK0E,OACdhC,KAAM,WAIV,OACE,kBAACrD,EAAA,EAAD,CACEE,UAAW,OACXuF,SAAU9E,KAAKmE,aACf7E,UAAW,aACXyF,GAAG,OACHC,QAAQ,OACRC,cAAc,UAEd,kBAAC5F,EAAA,EAAD,CAAKC,UAAU,sBACf,kBAAC4F,EAAA,EAAD,CACErC,MAAM,4CACND,MACE,kBAACtC,EAAA,EAAD,CACEZ,MAAOM,KAAKW,MAAM2C,WAAa,YAAc,eAD/C,6CAIF6B,QACE,kBAACC,EAAA,EAAD,CACEC,QAASrF,KAAKW,MAAM2C,WACpBgC,SAAUtF,KAAKoD,iBACflF,MAAM,aACNwB,MAAM,iBAMZ,kBAAC,EAAD,CACEkD,MAAM,cACNE,YAAY,wBACZC,QAAS/C,KAAKqE,OACd3B,KAAM,aAGP1C,KAAKW,MAAM2C,WAAaC,EAAMsB,EAE/B,kBAACxE,EAAA,EAAD,CACEX,MAAM,YACN6F,KAAK,QACLhF,QAAQ,WACRsC,MAAM,iCACN1E,KAAM,SACNqH,UAAWxF,KAAKW,MAAMW,MAAQtB,KAAKW,MAAM2C,YAActD,KAAKW,MAAM4C,KAAOvD,KAAKW,MAAM6C,QAAUxD,KAAKW,MAAMkB,WAN3G,uC,GAhJY9C,IAAM0B,WA+JXC,eA5KS,SAAAC,GACtB,MAAO,CACLC,WAAYD,EAAMC,eAIK,SAAAG,GACzB,MAAO,CACLgD,sBAAuB,SAAA7F,GAAK,OAAI6C,EAASuB,EAAmBpE,KAC5D8F,iBAAkB,SAACR,EAAOvC,EAAKK,GAAb,OAAqBP,ECvBpC,SAAkByC,EAAOvC,EAAKK,GACnC,MAAO,CACLnD,KPUyB,gBOTzBqF,MAAOA,EACPvC,IAAKA,EACLK,IAAKA,GDkB2CmE,CAASjC,EAAOvC,EAAKK,QAmK1DZ,CAA6CyC,GE7K7CuC,MAbf,WACE,IAAMpE,EAAMC,aAAaC,QAAQ,OAC3B+B,EAAMhC,aAAaC,QAAQ,OAEjC,OAAOM,IAAMC,IAAN,UAAaT,EAAb,4BAAoCiC,EAApC,uBACJvB,MAAK,SAAAC,GACJ,OAAOA,KAERC,OAAM,SAAUC,GACfC,QAAQC,IAAI,uBAAwBF,OCS3BwD,EAhBS,WACtB,IAAMrE,EAAMC,aAAaC,QAAQ,OAC3B+B,EAAMhC,aAAaC,QAAQ,OAEjC,SAAKF,IAAQiC,IAENzB,IAAMC,IAAN,UAAaT,EAAb,wDAAgEiC,IACpEvB,MAAK,SAAAC,GACJ,OAAOA,KAERC,OAAM,SAAAC,GACLC,QAAQC,IAAI,8BAA+BF,O,sDCQlCyD,cAAe,CAC5BC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,KAAM,UACNC,MAAO,UACPC,aAAc,WAGhBC,UAAW,CACTJ,KAAM,UACNC,KAAM,UACNE,aAAc,WAGhBE,KAAM,CACJN,QAAS,UACTK,UAAW,WAGbhI,KAAM,OAENkI,UAAW,CACTC,UAAW,CACTC,KAAM,CACJC,SAAU,UAKhBC,KAAM,CACJX,QAAS,CACPC,KAAM,UACNC,KAAM,SACNE,aAAc,e,6FClBPQ,GAzBK,SAACC,EAAIC,EAAMC,EAAUC,GACvC,IAAMxF,EAAMC,aAAaC,QAAQ,OAC3B+B,EAAMhC,aAAaC,QAAQ,OAEjC,IAAKF,IAAQiC,IAAQqD,IAASD,EAAI,OAAO,KAEzC,IAAIhD,EAAO,CACToD,WAAY,CACVC,SAAUL,EACVM,MAAOL,EACPM,YAAaL,GAAsB,EACnCM,SAAUL,GAAoB,KAIlC,OAAOhF,IAAMsF,KAAN,UAAc9F,EAAd,kCAA2CiC,GAAOI,GACtD3B,MAAK,SAAAC,GACJ,OAAOA,KAERC,OAAM,SAAAC,GACLC,QAAQC,IAAI,0BAA2BF,O,oBC9BtC,SAASkF,GAAOC,EAAMnJ,EAAMiI,GACjC,MAAO,CACLjI,KZGsB,aYFtBkJ,OAAQ,CACNC,KAAMA,EACNnJ,KAAMA,EACNiI,KAAMA,ICDZ,IAeMmB,G,YACJ,WAAYjJ,GAAQ,IAAD,8BACjB,4CAAMA,KAGRkJ,MAAQ,WACN,EAAKlJ,MAAMmJ,gBAAe,IALT,E,sEASjB,OACE,kBAACC,GAAA,EAAD,CACEC,KAAM3H,KAAK1B,MAAMgJ,KACjBM,iBAAkB,IAClBC,QAAS7H,KAAKwH,OAEd,kBAACM,GAAA,EAAD,CACEvH,QAAQ,SACRwH,SAAU/H,KAAK1B,MAAMH,KACrB0J,QAAS7H,KAAKwH,OAEbxH,KAAK1B,MAAM8H,W,GArBDrH,IAAM0B,WA4BZC,gBA3CS,SAAAC,GACtB,MAAO,CACL2G,KAAM3G,EAAMqH,YAAYX,OAAOC,KAC/BnJ,KAAMwC,EAAMqH,YAAYX,OAAOlJ,KAC/BiI,KAAMzF,EAAMqH,YAAYX,OAAOjB,SAIR,SAAArF,GACzB,MAAO,CACL0G,eAAgB,SAAAvJ,GAAK,OAAI6C,EAASsG,GAAOnJ,QAiC9BwC,CAA6C6G,ICnB5D,IAiBMU,GAAWrC,YAAesC,EAAQrC,QAAQY,MAY1C0B,G,YACJ,WAAY7J,GAAQ,IAAD,8BACjB,4CAAMA,KAcR8J,eAAiB,SAAC1E,GAChB,EAAKL,SAAS,CAACwD,SAAUnD,EAAE7E,OAAOX,SAhBjB,EAmBnBmK,cAAgB,SAAC3E,GACf,EAAKL,SAAS,CAACyD,QAASpD,EAAE7E,OAAOX,SApBhB,EAuBnBoK,WAAa,SAACpK,GACZ,EAAKmF,SAAS,CAACkF,KAAMrK,IAAiB,EAAKyC,MAAM4H,QAxBhC,EA2BnBC,WAAa,WACX,EAAKF,YAAW,GAChB,EAAKhK,MAAMmK,sBAAqB,IA7Bf,EAgCnBC,UAAY,SAACC,GACX,IAAI1B,GAAS0B,EAAY,MAAqBC,QAAQ,GAEtD,EAAKN,YAAW,GAGhB,IAAIO,EAAUnC,GAAY,EAAKpI,MAAMqI,GAAIM,EAAO,EAAKtG,MAAMkG,SAAU,EAAKlG,MAAMmG,SAChF,EAAKzD,SAAS,CACV4D,MAAOA,IAET,WACE,EAAK6B,SAASD,MAIlB,EAAKvK,MAAMmK,sBAAqB,IA/Cf,EAkDnBK,SAAW,SAAC7G,GACO,OAAbA,EACF,EAAK3D,MAAMmJ,gBAAe,EAAM,QAC9B,+QAC4B,EAAK9G,MAAMsG,MAAQ,ifAIjDhF,EAASD,MAAK,SAAA0B,GACRA,EACF,EAAKpF,MAAMmJ,gBAAe,EAAM,UAAW,uEAE3C,EAAKnJ,MAAMmJ,gBAAe,EAAM,QAAS,qJA3D/C,EAAK9G,MAAQ,CACX4H,MAAM,EAGNtB,MAAO,EACP8B,MAAO,EAEPlC,SAAUmC,OAAOC,KAAK,EAAK3K,MAAM4K,YAAY,GAC7CpC,QAAS,IAXM,E,oFAqEjB9G,KAAK1B,MAAMmK,sBAAqB,K,+BAIxB,IAAD,OACAU,EAAWnJ,KAAK1B,MAAhB6K,QAEHC,EAAeJ,OAAOC,KAAKjJ,KAAK1B,MAAM4K,YACtCG,EAAiBL,OAAOM,OAAOtJ,KAAK1B,MAAM4K,YAE1CA,EAAaE,EAAaG,KAAI,SAACC,EAAMC,GACvC,OACE,kBAACC,EAAA,EAAD,CAAUzI,IAAKwI,EAAGvL,MAAOsL,GAAOH,EAAeI,OAInD,OACE,kBAACE,GAAA,EAAD,CAAgBrK,UAAW6J,EAAQ5C,MAEjC,kBAACqD,GAAA,EAAD,CAAuBC,WAAY,kBAAC,IAAD,OAEjC,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAEvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC9J,EAAA,EAAD,CAAYZ,MAAM,gBAAgBa,QAAQ,WACvCP,KAAK1B,MAAMqI,GADd,IACmB3G,KAAK1B,MAAM+L,SAG9B,kBAAC/J,EAAA,EAAD,CACEC,QAAQ,QACR+J,cAAY,EACZ/K,UAAU,KACVG,MAAM,WACNM,KAAK1B,MAAMiM,UAGf,kBAACT,EAAA,EAAD,CACEC,WAAS,EACTE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJ9K,UAAW,WACXkL,WAAW,SACXC,QAAQ,iBAER,kBAAC,KAAD,CACEC,kBAAkB,EAClBC,YAAa,SAACzM,GAAD,gBAAeA,EAAQ,GAAR,WAAiBA,GAAUA,IACvD0M,QAAS,kBAAM,EAAKpC,gBACnB,gBAAEqC,EAAF,EAAEA,MAAsBpE,GAAxB,EAASqE,OAAT,EAAiBC,MAAjB,EAAwBtE,MAAMuE,EAA9B,EAA8BA,MAAsBC,GAApD,EAAqCC,cAArC,EAAoDD,SAApD,OACC,oCACE,kBAAC,IAAD,CAAkBE,MAAO,EAAKxK,MAAM4H,KAAON,GAAWC,GACpD,kBAAC7H,EAAA,EAAD,CACEmF,YAAW,EAAKlH,MAAM8M,cAAiB,EAAKzK,MAAM4H,OAAe,KACjEjJ,UAAW,qBACX6L,MAAO,EAAKxK,MAAM4H,KAAON,GAAWC,EACpC3H,QAAS,WACTgF,KAAK,QACL7F,MAAO,YACPK,QAAS,EAAKY,MAAM4H,KAClB,SAAC7E,GACCA,EAAE2H,kBACF5E,IACA,EAAKiC,UAAUuC,KACfD,KAGF,SAACtH,GACCA,EAAE2H,kBACFR,MAIH,EAAKlK,MAAM4H,KACV,kBAAC,IAAD,CAAe7I,MAAM,cAErB,kBAAC,IAAD,CAAoBA,MAAQ,EAAKpB,MAAM8M,eAAiB,EAAKzK,MAAM4H,KAAQ,UAAY,eAG3F,kBAAClJ,EAAA,EAAD,CAAKiM,EAAG,IACR,kBAAC,KAAMC,MAAP,MA7BF,IA6BiB,kBAAC,KAAMC,QAAP,MA7BjB,IA6BkC,kBAAC,KAAMC,QAAP,cAU9C,kBAACC,GAAA,EAAD,KAEE,kBAAC5B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAACzH,EAAA,EAAD,CACEpC,QAAQ,WACRoL,WAAS,EACTrM,UAAW,WACXsM,WAAS,EACT1N,MAAO8B,KAAKW,MAAMmG,QAClBxB,SAAUtF,KAAKqI,cACfwD,WAAY,CAACC,UAAW,QAI5B,kBAAChC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC/K,EAAA,EAAD,CAAK0M,GAAI,GACP,kBAACC,EAAA,EAAD,CAAa1M,UAAW6J,EAAQtC,UAC9B,kBAACoF,EAAA,EAAD,CAAQ/N,MAAO8B,KAAKW,MAAMkG,SAAUvB,SAAUtF,KAAKoI,gBAChDc,KAKNlJ,KAAK1B,MAAM4N,UACZ,kBAACC,EAAA,EAAD,CAAM5L,QAAQ,WAAWgF,KAAK,QAAQ3C,MAAK,UAAK5C,KAAK1B,MAAM4N,YAG1DlM,KAAK1B,MAAM8N,iBACZ,kBAACD,EAAA,EAAD,CAAM5L,QAAQ,WAAWgF,KAAK,QAAQ3C,MAAK,oCAAW5C,KAAK1B,MAAM8N,gBAAtB,YAG1CpM,KAAK1B,MAAM+N,YAAc,GAC1B,kBAACF,EAAA,EAAD,CAAM5L,QAAQ,WAAWgF,KAAK,QAAQ3C,MAAK,gDAAa5C,KAAK1B,MAAM+N,YAAYzD,QAAQ,GAA5C,YAG1C5I,KAAK1B,MAAMgO,YAActM,KAAK1B,MAAMiO,UACrC,kBAACJ,EAAA,EAAD,CAAM5L,QAAQ,WAAWgF,KAAK,QAAQ3C,MAAK,YAAO5C,KAAK1B,MAAMgO,WAAlB,yBAAmCtM,KAAK1B,MAAMiO,oB,GAtMpFxN,IAAM0B,WAmNVC,gBAhPS,SAAAC,GACtB,MAAO,CACL2G,KAAM3G,EAAMqH,YAAYX,OAAOC,KAC/BnJ,KAAMwC,EAAMqH,YAAYX,OAAOlJ,KAC/BiI,KAAMzF,EAAMqH,YAAYX,OAAOjB,KAC/BgF,aAAczK,EAAMqH,YAAYoD,iBAIT,SAAArK,GACzB,MAAO,CACL0G,eAAgB,SAACH,EAAMnJ,EAAMiI,GAAb,OAAsBrF,EAASsG,GAAOC,EAAMnJ,EAAMiI,KAClEqC,qBAAsB,SAAAvK,GAAK,OAAI6C,EC1C5B,SAAsB7C,GAC3B,MAAO,CACLC,KfO8B,qBeN9BD,SDuCwCkN,CAAalN,QAoO1CwC,CAA6C8L,aA7N1C,SAAArB,GAAK,MAAK,CAC1B5E,KAAM,CACJkG,WAAYvE,EAAQrC,QAAQC,QAAQG,OAEtCY,SAAU,CACR6F,MAAO,WAwNiDF,CAAsBrE,K,cErP5EwE,G,YACJ,WAAYrO,GAAQ,IAAD,8BACjB,4CAAMA,KAWRsO,qBAAuB,WACrB,IAAI1O,EAAQwH,IACZ,EAAKmH,SAAS3O,GAEd,IAAIgL,EAAavD,IACjB,EAAKmH,cAAc5D,IAjBF,EAoBnB2D,SAAW,SAAC5K,GACVA,EAASD,MAAK,SAAA0B,GACZ,GAAIA,EAAG,CACL,IAAIqJ,EAAQrJ,EAAEC,KAAKqJ,OACnB,EAAK1O,MAAM2O,cAAcF,GAEzB,EAAKG,iBAEL9K,QAAQC,IAAI,0PA5BC,EAiCnByK,cAAgB,SAAC7K,GACfA,EAASD,MAAK,SAAA0B,GACZ,GAAIA,EAAG,CACL,IAAIwF,EAAaxF,EAAEC,KAAKwJ,sBAEpBC,EAAS,GACblE,EAAWmE,SAAQ,SAAA7D,GAAI,OAAI4D,EAAO5D,EAAK7C,IAAM6C,EAAKhJ,QAElD,EAAKlC,MAAMgP,mBAAmBF,QAzCjB,EA8CnBF,UAAY,WACV,EAAK7J,SAAS,CACZkK,WAAW,KA7Cb,EAAK5M,MAAQ,CACX4M,WAAW,GAJI,E,iFASjBvN,KAAK4M,yB,+BA2CG,IAAD,OAGHY,EAFQxE,OAAOM,OAAOtJ,KAAK1B,MAAMyO,OAEfxD,KAAI,SAACC,EAAMiE,GAC/B,OACE,wBAAIxM,IAAKwM,EAAOnO,UAAW,QACzB,kBAAC,GAAD,CACEqH,GAAI6C,EAAK7C,GACT4D,QAASf,EAAKe,QACd2B,SAAU1C,EAAK0C,SAAS1L,KACxB6J,QAASb,EAAKa,QAAQ7J,KACtBkN,OAAQlE,EAAKkE,OAAOlN,KACpB8L,WAAY9C,EAAK8C,WACjBC,SAAU/C,EAAK+C,SACfH,gBAAiB5C,EAAK4C,gBACtBC,YAAa7C,EAAK6C,YAClBnD,WAAY,EAAK5K,MAAM4K,iBAM3ByE,EACF,kBAACtO,EAAA,EAAD,CACEE,UAAW,KACXqO,GAAI,GAEJ,kBAACC,GAAA,EAAD,CAAUC,OAAQ,KAClB,kBAACD,GAAA,EAAD,CAAUC,OAAQ,KAClB,kBAACD,GAAA,EAAD,CAAUC,OAAQ,MAItB,OACE,wBAAIxO,UAAU,yBACXU,KAAKW,MAAM4M,UACV,oCACGI,EACAA,EACAA,GAGHH,O,GA/FUzO,IAAM0B,WAsGXC,gBApHS,SAACC,GACvB,MAAO,CACLoM,MAAOpM,EAAMoM,MACb7D,WAAYvI,EAAMuI,eAIK,SAAAnI,GACzB,MAAO,CACLkM,cAAe,SAAC/O,GAAD,OAAW6C,ECrBvB,SAAe7C,GACpB,MAAO,CACLC,KjBEqB,YiBDrBD,SDkBmC6O,CAAM7O,KACzCoP,mBAAoB,SAACpP,GAAD,OAAW6C,EEpB5B,SAAoB7C,GACzB,MAAO,CACLC,KlBE0B,iBkBD1BD,SFiBwCgL,CAAWhL,QA0GxCwC,CAA6CiM,I,oCG5E7CoB,G,YAlCb,WAAYzP,GAAQ,qEACZA,I,sEAIN,OACE,kBAACe,EAAA,EAAD,CAAKC,UAAW,aACd,kBAAC,KAAD,CACEpB,MAAO8B,KAAK1B,MAAM0P,QAClBC,OAAQC,aAAY,CAClBC,UAAW,UACXC,UAAW,UACXC,WAAY,aAGd,kBAAC/N,EAAA,EAAD,CAAYZ,MAAM,cAAca,QAAQ,WACrCP,KAAK1B,MAAM8H,MAEd,kBAAC9F,EAAA,EAAD,CAAYC,QAAQ,KAAKb,MAAM,iBAC5BM,KAAK1B,MAAMiP,UAAY,kBAACe,GAAA,EAAD,CAAkB5O,MAAM,YAAY6F,KAAM,KAAQvF,KAAK1B,MAAM2I,QAIzF,kBAAC5H,EAAA,EAAD,CAAKiM,EAAG,GACN,kBAAChL,EAAA,EAAD,CAAYC,QAAQ,KAAKb,MAAM,eAC5BM,KAAK1B,MAAM0P,QADd,W,GAzBajP,IAAM0B,WCHd8N,OAbf,SAAuBC,GACrB,IAAMlN,EAAMC,aAAaC,QAAQ,OAC3B+B,EAAMhC,aAAaC,QAAQ,OAEjC,OAAOM,IAAMC,IAAN,UAAaT,EAAb,kCAA0CiC,EAA1C,YAAiDiL,EAAjD,iCACJxM,MAAK,SAAAC,GACJ,OAAOA,KAERC,OAAM,SAAUC,GACfC,QAAQC,IAAI,4BAA6BF,OCVzCsM,GAAO,IAAIC,KAEXC,GAAQF,GAAKG,cACbC,GAAUJ,GAAKK,WAAa,GAAM,GAAKL,GAAKK,WAAa,EAAhD,WAAwDL,GAAKK,WAAa,GACnFC,GAAON,GAAKO,WAAa,GAAKP,GAAKO,UAA5B,WAA4CP,GAAKO,WACxDC,GAA6B,IAAlBR,GAAKS,SAAiB,EAAIT,GAAKS,SAAW,EACrDC,IAAkBJ,IAAQE,IAAa,IAAMF,IAAQE,GAArC,YAAqDF,IAAQE,IAE7EG,GAAK,UAAMT,GAAN,YAAeE,GAAf,YAAyBE,IAC9BM,GAAW,UAAMV,GAAN,YAAeE,GAAf,YAAyBM,IAuC7BG,GAAW,eAAWF,GAAX,eAAuBA,IAClCG,GAAU,eAAWF,GAAX,eAA6BD,IACvCI,GAtCY,WACvB,IAGIC,EAAQ,KAERC,EAAgB,GAEpB,GAAIX,GAPO,EAOI,CACb,IAAIY,EAAI,WARC,GASLC,EAAO,eAAWjB,GAAX,YAAoBE,GAApB,YAA8BY,EAA9B,eAA0Cd,GAA1C,YAAmDE,GAAnD,YAA6Dc,GACxEF,EAAQ,WAAoBI,GAC5BH,EAAcI,KAAKF,GAGrB,GAAIb,GAbO,GAaI,CACb,IACIa,EAAO,eAAWjB,GAAX,YAAoBE,GAApB,YAA8BY,EAA9B,eAA0Cd,GAA1C,YAAmDE,GAAnD,YAfF,IAgBTY,EAAuCM,GACvCL,EAAcI,KAAKF,GAGrB,GAAIb,GAnBO,GAmBI,CACb,IACIa,EAAO,eAAWjB,GAAX,YAAoBE,GAApB,YAA8BY,EAA9B,eAA0Cd,GAA1C,YAAmDE,GAAnD,YArBF,IAsBTY,EAAuCO,GACvCN,EAAcI,KAAKF,GAGrB,IAAMK,EAAmB,eAAWtB,GAAX,YAAoBE,GAApB,YAA8BY,EAA9B,eAA0Cd,GAA1C,YAAmDE,GAAnD,YAA6DE,IAGtF,OAFAW,EAAcI,KAAKG,GAEZP,EAMkBQ,GCjC3B,IAcMC,G,YACJ,WAAY7R,GAAQ,IAAD,8BACjB,4CAAMA,KA4BRsO,qBAAuB,SAAC4B,EAAQhO,EAAM4P,GACpC,IAAIlS,EAAQqQ,GAAcC,GAC1B,EAAK6B,cAAc7P,EAAMtC,EAAOkS,IA/Bf,EAkCnBC,cAAgB,SAAC7P,EAAMyB,EAAUmO,GAC/BnO,EAASD,MAAK,SAAA0B,GACZ,GAAIA,EAAG,CACL,IAAMC,EAAOD,EAAEC,KAAK2M,aAChBrJ,EAAQ,EACZtD,EAAK0J,SAAQ,SAAA7D,GAAI,OAAIvC,GAASuC,EAAKvC,SACnCA,GAASA,EAAM2B,QAAQ,GAEV,UAATpI,EACF,EAAKlC,MAAMiS,mBAAmB/P,IAAQyG,EAAQ,EAAK3I,MAAMkS,OAAO5H,QAAQ,IAExE,EAAKtK,MAAMiS,mBAAmB/P,EAAMyG,GAGlCmJ,GAAe,EAAKlD,UAAUkD,QAElCnM,MAAM,+PAlDO,EAuDnBiJ,UAAY,SAAC1M,GACX,EAAK6C,SAAL,gBACG7C,GAAO,KAtDV,EAAKG,MAAQ,CACX8P,cAAc,EACdC,eAAe,EACfC,gBAAgB,GAND,E,iFAUE,IAAD,OAClB3Q,KAAK1B,MAAMiS,mBAAmB,QAAS,GAEvCvQ,KAAK4M,qBAAqB0C,GAAa,MAAO,gBAC9CtP,KAAK4M,qBAAqB2C,GAAY,OAAQ,iBAM9CC,GAAYnC,SAAQ,SAAC7D,EAAMiE,GACrBA,IAAU+B,GAAY/K,OAAS,EACjC,EAAKmI,qBAAqBpD,EAAM,QAAS,kBAEzC,EAAKoD,qBAAqBpD,EAAM,c,+BAsCpC,IAAIoH,GAA+B,IAAjB5Q,KAAK1B,MAAMuS,IAAY,GAAGjI,QAAQ,GAChDkI,GAAiC,IAAlB9Q,KAAK1B,MAAMyS,KAAa,IAAInI,QAAQ,GACnDoI,GAAmC,IAAnBhR,KAAK1B,MAAMkS,MAAc,KAAK5H,QAAQ,GAE1D,OACE,kBAACkB,EAAA,EAAD,CAAMC,WAAS,EAACU,QAAQ,SAASD,WAAW,UAC1C,kBAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC,GAAD,CACE4D,QAAS4C,EACTxK,KAAM,wCACNa,MAAOjH,KAAK1B,MAAMuS,IAClBtD,UAAWvN,KAAKW,MAAM8P,gBAG1B,kBAAC3G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC,GAAD,CACE4D,QAAS8C,EACT1K,KAAM,oDACNa,MAAOjH,KAAK1B,MAAMyS,KAClBxD,UAAWvN,KAAKW,MAAM+P,iBAG1B,kBAAC5G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC,GAAD,CACE4D,QAASgD,EACT5K,KAAM,8CACNa,MAAOjH,KAAK1B,MAAMkS,MAClBjD,UAAWvN,KAAKW,MAAMgQ,uB,GA1FT5R,IAAM0B,WAkGhBC,gBAhHS,SAAAC,GACtB,MAAO,CACLkQ,IAAKlQ,EAAMsQ,WAAWJ,IACtBE,KAAMpQ,EAAMsQ,WAAWF,KACvBP,MAAO7P,EAAMsQ,WAAWT,UAID,SAAAzP,GACzB,MAAO,CACLwP,mBAAoB,SAAC/P,EAAMtC,GAAP,OAAiB6C,EC1BlC,SAAoBP,EAAMtC,GAC/B,MAAO,CACLC,KvBU0B,iBuBT1BqC,KAAMA,EACNtC,MAAOA,GDsBuC+S,CAAWzQ,EAAMtC,QAsGpDwC,CAA6CyP,I,SEhIrD,SAASe,GAAM5J,EAAMzE,EAAOuD,GACjC,MAAO,CACLjI,KxBKqB,YwBJrB+S,MAAO,CACL5J,KAAMA,EACNzE,MAAOA,EACPuD,KAAMA,I,ICUG+K,G,iLARX,OACE,kBAAC9R,EAAA,EAAD,CAAKI,QAAQ,eAAeH,UAAW,aACrC,kBAACgP,GAAA,EAAD,CAAkB5O,MAAM,YAAY6F,KAAM,W,GAJ1BxG,IAAM0B,W,kDCsBxB2Q,G,YACJ,WAAY9S,GAAQ,IAAD,8BACjB,4CAAMA,KAGRkJ,MAAQ,WACN,EAAKlJ,MAAM+S,eAAc,IALR,E,sEASjB,OACE,kBAACC,GAAA,EAAD,CACE3J,KAAM3H,KAAK1B,MAAMgJ,KACjBO,QAAS7H,KAAKwH,MACd+J,kBAAgB,qBAChBC,mBAAiB,4BAEhBxR,KAAK1B,MAAMuE,OAAS,kBAAC4O,GAAA,EAAD,KAAczR,KAAK1B,MAAMuE,OAE7C7C,KAAK1B,MAAM8H,MACV,kBAACsL,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACG3R,KAAK1B,MAAM8H,OAKlB,kBAACwL,GAAA,EAAD,KACE,kBAACvR,EAAA,EAAD,CAAQN,QAASC,KAAKwH,MAAO9H,MAAM,YAAYmS,WAAS,GAAxD,oD,GA5BU9S,IAAM0B,WAsCXC,gBArDS,SAAAC,GACtB,MAAO,CACL2G,KAAM3G,EAAMqH,YAAYkJ,MAAM5J,KAC9BzE,MAAOlC,EAAMqH,YAAYkJ,MAAMrO,MAC/BuD,KAAMzF,EAAMqH,YAAYkJ,MAAM9K,SAIP,SAAArF,GACzB,MAAO,CACLsQ,cAAe,SAAC/J,EAAMzE,EAAOuD,GAAd,OAAuBrF,EAASmQ,GAAM5J,EAAMzE,EAAOuD,QA2CvD1F,CAA6C0Q,I,8BCxCtDU,G,YACJ,WAAYxT,GAAQ,IAAD,8BACjB,4CAAMA,KAGRyT,YAAc,WACZ,EAAKzT,MAAMc,oBAAmB,IALb,E,sEASjB,OACE,kBAAC4S,GAAA,EAAD,CACEC,OAAO,OACPtK,KAAM3H,KAAK1B,MAAMa,eACjB0I,QAAS7H,KAAK+R,aAGd,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,IAAD,CAAM/R,GAAE,WAAMhC,EAAN,UAA+BkB,UAAW,8BAChD,kBAACe,EAAA,EAAD,CAAQX,MAAM,UAAUkM,WAAS,EAAC7L,QAASC,KAAK+R,aAAhD,0CAMJ,kBAACI,GAAA,EAAD,KACE,kBAAC,IAAD,CAAM/R,GAAE,WAAMhC,EAAN,eAAoCkB,UAAW,8BACrD,kBAACe,EAAA,EAAD,CAAQX,MAAM,UAAUkM,WAAS,EAAC7L,QAASC,KAAK+R,aAAhD,wE,GA5BWhT,IAAM0B,WAyChBC,gBAtDS,SAACC,GACvB,MAAO,CACLxB,eAAgBwB,EAAMqH,YAAY7I,mBAKX,SAAA4B,GACzB,MAAO,CACL3B,mBAAoB,SAAClB,GAAD,OAAW6C,EAAS9C,EAAWC,QA6CxCwC,CAA6CoR,IClBtDM,G,YACJ,WAAY9T,GAAQ,IAAD,8BACjB,4CAAMA,KA2BR+T,yBAA2B,SAAC3O,GACtB,EAAKpF,MAAM8M,eACb1H,EAAEU,iBACFV,EAAE4O,aAAc,IA/BD,EAuCnB7O,iBAAmB,SAACxB,GAClBA,EAASD,MAAK,SAAA0B,GACZ,GAAIA,EAAG,CACL,EAAKpF,MAAMyF,uBAAsB,GAEjC,IAAMP,EAAQjC,aAAaC,QAAQ,SACnC,EAAKlD,MAAMiU,cAAc/O,GAEzB,EAAKH,SAAS,CAAEkK,WAAW,SAEvBhM,aAAaC,QAAQ,QAAQD,aAAaiR,WAAW,OACrDjR,aAAaC,QAAQ,QAAQD,aAAaiR,WAAW,OACzDvO,MAAM,gOAnDO,EAwDnBwO,aAAe,SAACC,EAAM/K,GAAP,OAAgB,SAAAjE,IACd,YAAXA,EAAEvF,MAAiC,QAAVuF,EAAEzC,KAA2B,UAAVyC,EAAEzC,MAIlD,EAAKoC,SAAS,CAAEsP,WAAYhL,MA1D5B,EAAKhH,MAAQ,CACX4M,WAAW,EACXoF,YAAY,GALG,E,iFAUjB,IAAMrR,EAAMC,aAAaC,QAAQ,OAC3B+B,EAAMhC,aAAaC,QAAQ,OAEjC,GAAIF,GAAOiC,EAAK,CACd,IAAIrF,EAAQ8C,EAAiB,MAAOM,EAAKiC,GACzCvD,KAAKyD,iBAAiBvF,QAEtB8B,KAAKqD,SAAS,CAAEkK,WAAW,IAG7B/O,OAAOoU,iBAAiB,eAAgB5S,KAAKqS,4B,6CAI7C7T,OAAOqU,oBAAoB,eAAgB7S,KAAKqS,4B,+BAyChD,IAAIzR,EAAaZ,KAAK1B,MAAMsC,WAE5B,OACE,kBAAC,IAAD,CAAkBuK,MAAOjD,GACvB,kBAAC7I,EAAA,EAAD,CAAKC,UAAU,MAAMG,QAAQ,gBAE1BO,KAAKW,MAAM4M,WAAa,kBAAC,GAAD,MAExB3M,GAAc,kBAAC,EAAD,MAEf,kBAACvB,EAAA,EAAD,CAAKE,UAAW,OAAQD,UAAW,gBAGhCsB,EACC,kBAAC,KAAD,KAME,kBAAC,KAAD,CAAOkS,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAOpS,EAAc,kBAAC,GAAD,MAAc,kBAAC,KAAD,CAAUR,GAAE,WAAMhC,EAAN,eAC7E,kBAAC,KAAD,CAAO0U,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAOpS,EAAc,kBAAC,GAAD,MAAc,kBAAC,KAAD,CAAUR,GAAE,WAAMhC,EAAN,eAClF,kBAAC,KAAD,CAAO0U,OAAK,EAACC,KAAK,cAAcC,OAAQ,kBAAOpS,EAAc,kBAAC,GAAD,MAAmB,kBAAC,KAAD,CAAUR,GAAE,WAAMhC,EAAN,eAC5F,kBAAC,KAAD,CAAO0U,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAOpS,EAAc,kBAAC,KAAD,CAAUR,GAAE,WAAMhC,EAAN,OAAiC,kBAAC,EAAD,SAErG,kBAAC,KAAD,CAAO0U,OAAK,EAACC,KAAI,WAAM3U,EAAN,KAA0B4U,OAAQ,kBAAOpS,EAAc,kBAAC,GAAD,MAAc,kBAAC,KAAD,CAAUR,GAAE,WAAMhC,EAAN,eAClG,kBAAC,KAAD,CAAO0U,OAAK,EAACC,KAAI,WAAM3U,EAAN,UAA+B4U,OAAQ,kBAAOpS,EAAc,kBAAC,GAAD,MAAc,kBAAC,KAAD,CAAUR,GAAE,WAAMhC,EAAN,eACvG,kBAAC,KAAD,CAAO0U,OAAK,EAACC,KAAI,WAAM3U,EAAN,eAAoC4U,OAAQ,kBAAOpS,EAAc,kBAAC,GAAD,MAAmB,kBAAC,KAAD,CAAUR,GAAE,WAAMhC,EAAN,eACjH,kBAAC,KAAD,CAAO0U,OAAK,EAACC,KAAI,WAAM3U,EAAN,UAA+B4U,OAAQ,kBAAOpS,EAAc,kBAAC,KAAD,CAAUR,GAAE,WAAMhC,EAAN,OAAiC,kBAAC,EAAD,UAI5H,kBAAC,EAAD,QAON,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,KAAD,CACE6U,KAAMjT,KAAK1B,MAAM8M,aACjB8H,QAAO,gY,GA9GCnU,IAAM0B,WAuHTC,gBAvIS,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAMC,WAClBwK,aAAczK,EAAMqH,YAAYoD,iBAKT,SAAArK,GACzB,MAAO,CACLgD,sBAAuB,SAAC7F,GAAD,OAAW6C,EAASuB,EAAmBpE,KAC9DqU,cAAe,SAACrU,GAAD,OAAW6C,EC5CrB,CACL5C,K7BSqB,Y6BRrBqF,MD0C8CtF,KAC9CmT,cAAe,SAAC/J,EAAMzE,EAAOuD,GAAd,OAAuBrF,EAASmQ,GAAM5J,EAAMzE,EAAOuD,QA2HvD1F,CAA6C0R,IE/JtDe,GAAcC,QACW,cAA7B5U,OAAO6U,SAASC,UAEe,UAA7B9U,OAAO6U,SAASC,UAEhB9U,OAAO6U,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTzR,MAAK,SAAA8R,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrT,QACfgT,UAAUC,cAAcO,YAI1B/R,QAAQC,IACN,iHAKEqR,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB1R,QAAQC,IAAI,sCAGRqR,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5B5R,OAAM,SAAAC,GACLC,QAAQD,MAAM,4CAA6CA,MC7F1D,IAAMmS,GAAgB,CAC3B1T,YAAY,EAGZC,KAAM,CACJC,UAAW,GACX+C,QAAS,GACT0Q,WAAY,IAIdxH,MAAO,GAGP7D,WAAY,GAGZ+H,WAAY,CACVJ,IAAK,EACLE,KAAM,EACNP,MAAO,GAGTxI,YAAa,CACXoD,cAAc,EAEdjM,gBAAgB,EAEhB+R,MAAO,CACL5J,MAAM,EACNzE,MAAO,GACPuD,KAAM,IAGRiB,OAAQ,CACNC,MAAM,EACNnJ,KAAM,GACNiI,KAAM,M,kBCrBGoO,GAFDC,cCCC,SAAC9T,EAAO+T,GACrB,OAAQA,EAAOvW,MAEb,IjCLkC,yBiCMhC,OAAO6K,OAAO2L,OAAO,GAAIhU,EAAO,CAC9BqH,YAAY,gBACPrH,EAAMqH,YADA,CAET4M,OAAO,gBACFjU,EAAMqH,YAAY4M,OADjB,gBAEHF,EAAOlU,UAAwB1B,IAAjB4V,EAAOxW,MAAsBwW,EAAOxW,OAASyC,EAAMqH,YAAY4M,OAAOF,EAAOlU,YAKpG,IjC1BqB,YiC2BnB,OAAOwI,OAAO2L,OAAO,GAAIhU,EAAlBqI,OAAA,KAAAA,CAAA,GACFrI,EADE,CAEL,MAAS+T,EAAOxW,SAGpB,IjC7BsB,aiC8BpB,OAAO8K,OAAO2L,OAAO,GAAIhU,EAAlBqI,OAAA,KAAAA,CAAA,GACFrI,EADE,CAEL,YAAc,gBACTA,EAAMqH,YADX,CAEE,OAAU,CACRV,UAA6BxI,IAAvB4V,EAAOrN,OAAOC,MAAqBoN,EAAOrN,OAAOC,KACvDnJ,UAA6BW,IAAvB4V,EAAOrN,OAAOlJ,KAAqBuW,EAAOrN,OAAOlJ,KAAOwC,EAAMqH,YAAYX,OAAOlJ,KACvFiI,UAA6BtH,IAAvB4V,EAAOrN,OAAOjB,KAAqBsO,EAAOrN,OAAOjB,KAAOzF,EAAMqH,YAAYX,OAAOjB,WAK/F,IjCzCqB,YiC0CnB,OAAO4C,OAAO2L,OAAO,GAAIhU,EAAlBqI,OAAA,KAAAA,CAAA,GACFrI,EADE,CAEL,YAAc,gBACTA,EAAMqH,YADX,CAEE,MAAS,CACPV,UAA4BxI,IAAtB4V,EAAOxD,MAAM5J,MAAqBoN,EAAOxD,MAAM5J,KACrDzE,WAA8B/D,IAAvB4V,EAAOxD,MAAMrO,MAAsB6R,EAAOxD,MAAMrO,MAAQlC,EAAMqH,YAAYkJ,MAAMrO,MACvFuD,UAA4BtH,IAAtB4V,EAAOxD,MAAM9K,KAAqBsO,EAAOxD,MAAM9K,KAAOzF,EAAMqH,YAAYkJ,MAAM9K,WAK5F,IjCpD8B,qBiCqD5B,OAAO4C,OAAO2L,OAAO,GAAIhU,EAAlBqI,OAAA,KAAAA,CAAA,GACFrI,EADE,CAEL,YAAc,gBACTA,EAAMqH,YADX,CAEE,kBAAiClJ,IAAjB4V,EAAOxW,MAAsBwW,EAAOxW,OAASyC,EAAMqH,YAAY9J,WAIrF,IjC9D2B,kBiC+DzB,OAAO8K,OAAO2L,OAAO,GAAIhU,EAAlBqI,OAAA,KAAAA,CAAA,GACFrI,EADE,CAEL,YAAc,gBACTA,EAAMqH,YADX,CAEE,oBAAmClJ,IAAjB4V,EAAOxW,MAAsBwW,EAAOxW,OAASyC,EAAMqH,YAAY7I,oBAIvF,IjCrEqB,YiCsEnB,OAAO6J,OAAO2L,OAAO,GAAIhU,EAAlBqI,OAAA,KAAAA,CAAA,GACFrI,EADE,CAEL,KAAO,gBACFA,EAAME,KADX,CAEEC,UAAW4T,EAAOlR,WAIxB,IjC5E0B,iBiC6ExB,OAAOwF,OAAO2L,OAAO,GAAIhU,EAAlBqI,OAAA,KAAAA,CAAA,GACFrI,EADE,CAEL,WAAa,gBACRA,EAAMsQ,WADX,gBAEGyD,EAAOlU,UAAwB1B,IAAjB4V,EAAOxW,MAAsBwW,EAAOxW,MAAQ,OAIjE,IjC7F0B,iBiC8FxB,OAAO8K,OAAO2L,OAAO,GAAIhU,EAAO,CAC9B,gBAAoC7B,IAAtB4V,EAAO9T,WAA2B8T,EAAO9T,YAAcD,EAAMC,aAG/E,IjCjG0B,iBiCkGxB,OAAOoI,OAAO2L,OAAO,GAAIhU,EAAO,CAC9B,WAAc+T,EAAOxW,QAGzB,IjChGyB,gBiCiGvB,OAAO8K,OAAO2L,OAAO,GAAIhU,EAAlBqI,OAAA,KAAAA,CAAA,GACFrI,EADE,CAEL,KAAQ,CACNG,UAAW4T,EAAOlR,MAAQkR,EAAOlR,MAAQ,GACzCK,QAAS6Q,EAAOzT,IAAMyT,EAAOzT,IAAM,GACnCsT,WAAYG,EAAOpT,IAAMoT,EAAOpT,IAAM,OAG5C,QACE,OAAOX,KDvGsB2T,IEH7B3Q,GAAO2Q,GAEbO,IAAS7B,OACP,kBAAC,IAAD,CAAUwB,MAAOM,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAKnR,KAAMA,OAGfoR,SAASC,eAAe,SJAnB,SAAkBtB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsB,IAAIC,wBAAwB1W,OAAO6U,SAAS8B,MACpDC,SAAW5W,OAAO6U,SAAS+B,OAIvC,OAGF5W,OAAOoU,iBAAiB,QAAQ,WAC9B,IAAMa,EAAK,UAAMyB,wBAAN,sBAEP/B,KAgEV,SAAiCM,EAAOC,GAEtC2B,MAAM5B,EAAO,CACX6B,QAAS,CAAE,iBAAkB,YAE5BtT,MAAK,SAAAC,GAEJ,IAAMsT,EAActT,EAASqT,QAAQvT,IAAI,gBAEnB,MAApBE,EAASyL,QACO,MAAf6H,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAMzT,MAAK,SAAA8R,GACjCA,EAAa4B,aAAa1T,MAAK,WAC7BxD,OAAO6U,SAASsC,eAKpBnC,GAAgBC,EAAOC,MAG1BxR,OAAM,WACLE,QAAQC,IACN,oEAvFAuT,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAMzT,MAAK,WACjCI,QAAQC,IACN,iHAMJmR,GAAgBC,EAAOC,OIzB/BE,K","file":"static/js/main.9c4934de.chunk.js","sourcesContent":["\r\n\r\nimport {UPD_MOBILE_MENU} from \"../variables/actionTypes\";\r\n\r\nexport function mobileMenu(value) {\r\n  return {\r\n    type: UPD_MOBILE_MENU,\r\n    value\r\n  };\r\n}","// actionTypes\r\n\r\n/*\r\n * типы экшенов\r\n */\r\nexport const UPD_MAIN_STORE = 'UPD_MAIN_STORE';\r\nexport const UPD_TASKS = 'UPD_TASKS';\r\nexport const UPD_AUTHORIZED = 'UPD_AUTHORIZED';\r\nexport const UPD_ACTIVITIES = 'UPD_ACTIVITIES';\r\nexport const UPD_NOTICE = 'UPD_NOTICE';\r\nexport const UPD_MODAL = 'UPD_MODAL';\r\nexport const UPD_MOBILE_MENU = 'UPD_MOBILE_MENU';\r\nexport const UPD_NOT_SAVED_DATA = 'UPD_NOT_SAVED_DATA';\r\nexport const UPD_LOGIN = 'UPD_LOGIN';\r\nexport const UPD_USER_DATA = 'UPD_USER_DATA';\r\nexport const UPD_STATISTICS = 'UPD_STATISTICS';\r\nexport const UPD_APPLICATION_STATUS = 'UPD_APPLICATION_STATUS';","\r\n\r\nexport const gitHubPagesName = 'redmine_time_tracker';\r\n","// pageHeader\r\n\r\nimport React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n// let Icon = IconsLib[elem[1]];\r\n// <Icon />\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { mobileMenu } from \"../actionCreators/mobileMenu\";\r\n\r\nimport {gitHubPagesName} from '../variables/path';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authorized: !!+state.authorized,\r\n    name: state.user.userLogin,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    dispatchMobileMenu: (value) => dispatch(mobileMenu(value)),\r\n  }\r\n};\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\n// настройка тегов\r\nclass PageHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  showMobileMenu = () => {\r\n    this.props.dispatchMobileMenu(true);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ElevationScroll>\r\n        <Box\r\n          className={\"page-header\"}\r\n          component={'header'}\r\n          position=\"fixed\"\r\n          bgcolor=\"primary.dark\"\r\n          color=\"text.primary\"\r\n        >\r\n          <Toolbar >\r\n\r\n            <Hidden mdUp>\r\n              <IconButton\r\n                onClick={this.showMobileMenu}\r\n                edge=\"start\"\r\n                aria-label=\"menu\"\r\n                color=\"inherit\">\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </Hidden>\r\n\r\n            <Hidden smDown>\r\n              <Link to={`/${gitHubPagesName}/tasks`} className={\"clear-link-style\"}>\r\n                <Button color=\"inherit\">\r\n                  Задачи\r\n              </Button>\r\n              </Link>\r\n\r\n              <Link to={`/${gitHubPagesName}/statistics`} className={\"clear-link-style\"}>\r\n                <Button color=\"inherit\">\r\n                  Статистика\r\n              </Button>\r\n              </Link>\r\n            </Hidden>\r\n\r\n            <Typography variant=\"body2\" color=\"inherit\" className={'header__login'}>\r\n              {this.props.name}\r\n            </Typography>\r\n          </Toolbar>\r\n        </Box>\r\n      </ElevationScroll>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageHeader);\r\n","import axios from \"axios\";\r\n\r\nfunction getAuthorization(key, newUrl, newApiOrLogin, pass) {\r\n  const url = newUrl ? newUrl : localStorage.getItem(\"url\");\r\n  const apiOrLogin = newApiOrLogin ? newApiOrLogin : localStorage.getItem(\"api\");\r\n\r\n  let request;\r\n  let requestParams = {};\r\n\r\n  switch (key) {\r\n    case \"api\":\r\n      request = `${url}/users/current.json?key=${apiOrLogin}`;\r\n      break;\r\n    case \"login\":\r\n      request = `${url}/users/current.json`;\r\n      requestParams = {\r\n        auth: {\r\n          username: apiOrLogin,\r\n          password: pass\r\n        }\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return axios.get(request, requestParams)\r\n    .then(response => {\r\n      return response;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"authorization => error \\n\", error);\r\n    });\r\n}\r\n\r\nexport default getAuthorization;\r\n","import {UPD_AUTHORIZED} from \"../variables/actionTypes\";\r\n\r\nexport function storeAuthorization(authorized) {\r\n  return {\r\n    type: UPD_AUTHORIZED,\r\n    authorized: authorized\r\n  };\r\n}","import React from \"react\";\r\n\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\n\r\n\r\n\r\nclass Input extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n  render() {\r\n    const Icon = IconsLib[this.props.icon];\r\n\r\n    return (\r\n      <TextField\r\n      label={this.props.label}\r\n      title={this.props.label}\r\n      type={this.props.type ? this.props.type : 'text'}\r\n      color=\"secondary\"\r\n      placeholder={this.props.placeholder}\r\n      variant=\"outlined\"\r\n      onInput={this.props.onInput}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <Icon />\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n    />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport getAuthorization from \"../redmine/getAuthorization\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { userInfo } from \"../actionCreators/userInfo\";\r\nimport { storeAuthorization } from \"../actionCreators/storeAuthorization\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport Input from \"../components/Input\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authorized: state.authorized\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    dispatchAuthorization: value => dispatch(storeAuthorization(value)),\r\n    dispatchUserInfo: (login, key, url) => dispatch(userInfo(login, key, url))\r\n  };\r\n};\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      logInByApi: false,\r\n      url: \"\",\r\n      api: \"\",\r\n      login: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  switchLogInByApi = () => {\r\n    this.setState({ logInByApi: !this.state.logInByApi });\r\n\r\n    this.setState({\r\n      api: '',\r\n      login: '',\r\n      password: ''\r\n    });\r\n  };\r\n\r\n  setAuthorization = response => {\r\n    response.then(e => {\r\n      if (e) {\r\n        let login = e.data.user.login;\r\n        let apiKey = e.data.user.api_key;\r\n\r\n        localStorage.setItem(\"url\", this.state.url);\r\n        localStorage.setItem(\"api\", apiKey);\r\n        localStorage.setItem(\"login\", login);\r\n\r\n        this.props.dispatchAuthorization(true);\r\n        //TODO зачем записывать api и url?\r\n        this.props.dispatchUserInfo(login, apiKey, this.state.url);\r\n      } else {\r\n        alert(\"Неверные данные\");\r\n      }\r\n    });\r\n  };\r\n\r\n  updComponent = () => {\r\n    let value;\r\n    if (this.state.logInByApi) {\r\n      value = getAuthorization('api', this.state.url, this.state.api);\r\n    } else {\r\n      value = getAuthorization('login', this.state.url, this.state.login, this.state.password);\r\n    }\r\n\r\n    this.setAuthorization(value);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.updComponent(this.state.url, this.state.api);\r\n  };\r\n\r\n  setUrl = e => {\r\n    let url = e.target.value.trim(); // значение без пробелов\r\n    if (url.endsWith(\"/\")) {\r\n      url = url.substring(0, url.length - 1); // удалить последний символ\r\n    }\r\n    this.setState({ url: url });\r\n  };\r\n\r\n  setApi = e => {\r\n    this.setState({ api: e.target.value.trim() });\r\n  };\r\n\r\n  setLogin = e => {\r\n    this.setState({ login: e.target.value.trim() });\r\n  };\r\n\r\n  setPass = e => {\r\n    this.setState({ password: e.target.value.trim() });\r\n  };\r\n\r\n  render() {\r\n    const loginPass = (\r\n      <>\r\n        <Input\r\n          label=\"Логин\"\r\n          placeholder=\"Логин\"\r\n          onInput={this.setLogin}\r\n          icon={\"LockOpen\"}\r\n        />\r\n\r\n        <Input\r\n          label=\"Пароль\"\r\n          placeholder=\"****\"\r\n          type={'password'}\r\n          onInput={this.setPass}\r\n          icon={\"VpnKey\"}\r\n        />\r\n      </>\r\n    );\r\n\r\n    const api = (\r\n      <Input\r\n        label=\"Redmine Api\"\r\n        placeholder=\"api_key\"\r\n        onInput={this.setApi}\r\n        icon={\"VpnKey\"}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Box\r\n        component={\"form\"}\r\n        onSubmit={this.handleSubmit}\r\n        className={\"login-form\"}\r\n        mx=\"auto\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n      >\r\n        <Box className=\"login-form__switch\">\r\n        <FormControlLabel\r\n          title=\"Вход по api\"\r\n          label={\r\n            <Typography\r\n              color={this.state.logInByApi ? \"secondary\" : \"textPrimary\"}\r\n            >Вход по api</Typography>\r\n          }\r\n          control={\r\n            <Switch\r\n              checked={this.state.logInByApi}\r\n              onChange={this.switchLogInByApi}\r\n              value=\"logInByApi\"\r\n              color=\"secondary\"\r\n            />\r\n          }\r\n        />\r\n        </Box>\r\n\r\n        <Input\r\n          label=\"Redmine Url\"\r\n          placeholder=\"http://redmine.url.ru\"\r\n          onInput={this.setUrl}\r\n          icon={\"Language\"}\r\n        />\r\n\r\n        {this.state.logInByApi ? api : loginPass}\r\n\r\n        <Button\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          variant=\"outlined\"\r\n          title=\"Войти\"\r\n          type={\"submit\"}\r\n          disabled={!this.state.url || (this.state.logInByApi ? !this.state.api : !this.state.login || !this.state.password)}\r\n        >\r\n          Войти\r\n        </Button>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import {UPD_USER_DATA} from \"../variables/actionTypes\";\r\n\r\nexport function userInfo(login, key, url) {\r\n  return {\r\n    type: UPD_USER_DATA,\r\n    login: login,\r\n    key: key,\r\n    url: url\r\n  };\r\n}","import axios from \"axios\";\r\n\r\nfunction getTasks() {\r\n  const url = localStorage.getItem('url');\r\n  const api = localStorage.getItem('api');\r\n\r\n  return axios.get(`${url}/issues.json?key=${api}&assigned_to_id=me`)\r\n    .then(response => {\r\n      return response;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"getTasks => error \\n\", error);\r\n    });\r\n}\r\n\r\nexport default getTasks;\r\n\r\n\r\n","\r\nimport axios from \"axios\";\r\n\r\n\r\nconst getTypeActivity = () => {\r\n  const url = localStorage.getItem('url');\r\n  const api = localStorage.getItem('api');\r\n\r\n  if (!url || !api) return false;\r\n\r\n  return axios.get(`${url}/enumerations/time_entry_activities.json?key=${api}`)\r\n    .then(response => {\r\n      return response;\r\n    })\r\n    .catch(error => {\r\n      console.log(\"getTypeActivity => error \\n\", error);\r\n    });\r\n};\r\n\r\n\r\nexport default getTypeActivity;","import {createMuiTheme} from \"@material-ui/core/styles\";\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport teal from \"@material-ui/core/colors/teal\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\nimport lime from \"@material-ui/core/colors/teal\";\r\n\r\n// export default createMuiTheme({\r\n//   palette: {\r\n//     primary: teal,\r\n//     secondary: indigo,\r\n//   },\r\n// });\r\n\r\n// export default createMuiTheme({\r\n//   palette: {\r\n//     primary: blueGrey,\r\n//     secondary: teal,\r\n\r\n//     type: 'dark',\r\n//   },\r\n// });\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#3D454C\",\r\n      dark: \"#29333A\",\r\n      light: \"#596069\",\r\n      contrastText: \"#F6F6FF\"\r\n    },\r\n\r\n    secondary: {\r\n      main: \"#59D366\",\r\n      dark: \"#169B4E\",\r\n      contrastText: \"#FFFFFF\"\r\n    },\r\n\r\n    text: {\r\n      primary: \"#FFFFFF\",\r\n      secondary: \"#F6F6FF\",\r\n    },\r\n\r\n    type: \"dark\",\r\n\r\n    overrides: {\r\n      MuiButton: {\r\n        root: {\r\n          minWidth: \"40px\",\r\n        }\r\n      },\r\n    },\r\n\r\n    stop: {\r\n      primary: {\r\n        main: \"#F9574B\",\r\n        dark: \"#C2110\",\r\n        contrastText: \"#FFFFFF\"\r\n      }\r\n    },\r\n  }\r\n});\r\n","// timeEntries\r\nimport axios from \"axios\";\r\n\r\nimport getAuthorization from \"./getAuthorization\";\r\n\r\n\r\n/**\r\n *\r\n * @param id\r\n * @param time\r\n * @param activity\r\n * @param comment\r\n * @returns {Promise<AxiosResponse<T>>|null}\r\n */\r\nconst timeEntries = (id, time, activity, comment) => {\r\n  const url = localStorage.getItem('url');\r\n  const api = localStorage.getItem('api');\r\n\r\n  if (!url || !api || !time || !id) return null;\r\n\r\n  let data = {\r\n    time_entry: {\r\n      issue_id: id,\r\n      hours: time,\r\n      activity_id: activity ? activity : 9,\r\n      comments: comment ? comment : ''\r\n    }\r\n  };\r\n\r\n  return axios.post(`${url}/time_entries.json?key=${api}`, data)\r\n    .then(response => {\r\n      return response;\r\n    })\r\n    .catch(error => {\r\n      console.log(\"timeEntries => error \\n\", error);\r\n    });\r\n};\r\n\r\n\r\nexport default timeEntries;","// alert\r\n\r\nimport {UPD_NOTICE} from \"../variables/actionTypes\";\r\n\r\nexport function notice(show, type, text) {\r\n  return {\r\n    type: UPD_NOTICE,\r\n    notice: {\r\n      show: show,\r\n      type: type,\r\n      text: text\r\n    }\r\n  };\r\n}","import React from \"react\";\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {notice} from '../actionCreators/notice';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    show: state.application.notice.show,\r\n    type: state.application.notice.type,\r\n    text: state.application.notice.text,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    dispatchNotice: value => dispatch(notice(value)),\r\n  };\r\n};\r\n\r\n\r\nclass Notice extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  close = () => {\r\n    this.props.dispatchNotice(false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Snackbar\r\n        open={this.props.show}\r\n        autoHideDuration={6000}\r\n        onClose={this.close}\r\n      >\r\n        <Alert\r\n          variant=\"filled\"\r\n          severity={this.props.type}\r\n          onClose={this.close}\r\n        >\r\n          {this.props.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notice);\r\n\r\n","import React from \"react\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MyTheme from \"../MyTheme\";\r\nimport {MuiThemeProvider, createMuiTheme} from \"@material-ui/core/styles\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\n\r\n\r\nimport Timer from 'react-compound-timer';\r\n\r\nimport timeEntries from '../redmine/timeEntries';\r\n\r\nimport Notice from '../components/Notice';\r\nimport {notice} from \"../actionCreators/notice\";\r\nimport {notSavedData} from \"../actionCreators/notSavedData\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    show: state.application.notice.show,\r\n    type: state.application.notice.type,\r\n    text: state.application.notice.text,\r\n    notSavedData: state.application.notSavedData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    dispatchNotice: (show, type, text) => dispatch(notice(show, type, text)),\r\n    dispatchNotSavedData: value => dispatch(notSavedData(value)),\r\n  };\r\n};\r\n\r\n\r\nconst redTheme = createMuiTheme(MyTheme.palette.stop);\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    background: MyTheme.palette.primary.light,\r\n  },\r\n  activity: {\r\n    width: '100%'\r\n  },\r\n});\r\n\r\n\r\nclass Task extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      play: false,\r\n      // seconds: 0,\r\n      // minutes: 0,\r\n      hours: 0,\r\n      timer: 0,\r\n\r\n      activity: Object.keys(this.props.activities)[0],\r\n      comment: '',\r\n    };\r\n  }\r\n\r\n  changeActivity = (e) => {\r\n    this.setState({activity: e.target.value});\r\n  };\r\n\r\n  changeComment = (e) => {\r\n    this.setState({comment: e.target.value});\r\n  };\r\n\r\n  switchPlay = (value) => {\r\n    this.setState({play: value ? value : !this.state.play});\r\n  };\r\n\r\n  startTimer = () => {\r\n    this.switchPlay(true);\r\n    this.props.dispatchNotSavedData(true);\r\n  };\r\n\r\n  stopTimer = (milliseconds) => {\r\n    let hours = (milliseconds / (1000 * 60 * 60)).toFixed(2);\r\n\r\n    this.switchPlay(false);\r\n\r\n    //TODO вкл/выкл отправку времени\r\n    let entries = timeEntries(this.props.id, hours, this.state.activity, this.state.comment);\r\n    this.setState({\r\n        hours: hours,\r\n      },\r\n      () => {\r\n        this.feedback(entries);\r\n      }\r\n    );\r\n\r\n    this.props.dispatchNotSavedData(false);\r\n  };\r\n\r\n  feedback = (response) => {\r\n    if (response === null) {\r\n      this.props.dispatchNotice(true, 'error',\r\n        'Ошибка! Данные НЕ отправлены! ' +\r\n        'Ваше неучтённое время: ' + this.state.hours + 'ч. ' +\r\n        'Похоже, данные сайта были очищены вместе с Redmine Api Key. ' +\r\n        'Перезагрузите страницу и заново авторизуйтесь');\r\n    } else {\r\n      response.then(e => {\r\n        if (e) {\r\n          this.props.dispatchNotice(true, 'success', 'Время учтено');\r\n        } else {\r\n          this.props.dispatchNotice(true, 'error', 'Ошибка при отправке данных');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatchNotSavedData(false);\r\n  }\r\n\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n\r\n    let activityKeys = Object.keys(this.props.activities);\r\n    let activityValues = Object.values(this.props.activities);\r\n\r\n    let activities = activityKeys.map((elem, i) => {\r\n      return (\r\n        <MenuItem key={i} value={elem}>{activityValues[i]}</MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <ExpansionPanel className={classes.root}>\r\n\r\n        <ExpansionPanelSummary expandIcon={<IconsLib.ExpandMore/>}>\r\n\r\n          <Grid container spacing={2}>\r\n\r\n            <Grid item xs={12} sm={8} md={9}>\r\n              <Typography color=\"textSecondary\" variant=\"caption\">\r\n                {this.props.id} {this.props.project}\r\n              </Typography>\r\n\r\n              <Typography\r\n                variant=\"body2\"\r\n                gutterBottom\r\n                component=\"h3\"\r\n                color=\"inherit\"\r\n              >{this.props.subject}</Typography>\r\n            </Grid>\r\n\r\n            <Grid\r\n              container\r\n              item\r\n              xs={12}\r\n              sm={4}\r\n              md={3}\r\n              className={'timer-wp'}\r\n              alignItems=\"center\"\r\n              justify=\"space-between\">\r\n\r\n              <Timer\r\n                startImmediately={false}\r\n                formatValue={(value) => `${(value < 10 ? `0${value}` : value)}`}\r\n                onStart={() => this.startTimer()}>\r\n                {({start, resume, pause, stop, reset, getTimerState, getTime}) => (\r\n                  <>\r\n                    <MuiThemeProvider theme={this.state.play ? redTheme : MyTheme}>\r\n                      <Button\r\n                        disabled={(this.props.notSavedData && !this.state.play) ? true : null}\r\n                        className={'extends-panel__btn'}\r\n                        theme={this.state.play ? redTheme : MyTheme}\r\n                        variant={\"outlined\"}\r\n                        size=\"small\"\r\n                        color={\"secondary\"}\r\n                        onClick={this.state.play ?\r\n                          (e) => {\r\n                            e.stopPropagation();\r\n                            stop();\r\n                            this.stopTimer(getTime());\r\n                            reset();\r\n                          }\r\n                          :\r\n                          (e) => {\r\n                            e.stopPropagation();\r\n                            start();\r\n                          }\r\n                        }\r\n                      >\r\n                        {this.state.play ? (\r\n                          <IconsLib.Stop color=\"secondary\"/>\r\n                        ) : (\r\n                          <IconsLib.PlayArrow color={(this.props.notSavedData && !this.state.play) ? 'primary' : 'secondary'}/>\r\n                        )}\r\n                      </Button>\r\n                      <Box m={1}/>\r\n                      <Timer.Hours/>:<Timer.Minutes/>:<Timer.Seconds/>\r\n                    </MuiThemeProvider>\r\n                  </>\r\n                )}\r\n              </Timer>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </ExpansionPanelSummary>\r\n\r\n        <ExpansionPanelDetails>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6} md={8}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                multiline\r\n                className={'textarea'}\r\n                fullWidth\r\n                value={this.state.comment}\r\n                onChange={this.changeComment}\r\n                inputProps={{maxLength: 255}}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Box mb={1}>\r\n                <FormControl className={classes.activity}>\r\n                  <Select value={this.state.activity} onChange={this.changeActivity}>\r\n                    {activities}\r\n                  </Select>\r\n                </FormControl>\r\n              </Box>\r\n\r\n              {this.props.priority &&\r\n              <Chip variant=\"outlined\" size=\"small\" label={`${this.props.priority}`}/>\r\n              }\r\n\r\n              {this.props.estimated_hours &&\r\n              <Chip variant=\"outlined\" size=\"small\" label={`План: ${this.props.estimated_hours}ч`}/>\r\n              }\r\n\r\n              {this.props.spent_hours > 0 &&\r\n              <Chip variant=\"outlined\" size=\"small\" label={`Учтено: ${this.props.spent_hours.toFixed(2)}ч`}/>\r\n              }\r\n\r\n              {this.props.start_date && this.props.due_date &&\r\n              <Chip variant=\"outlined\" size=\"small\" label={`c ${this.props.start_date} до ${this.props.due_date}`}/>\r\n              }\r\n\r\n            </Grid>\r\n          </Grid>\r\n\r\n\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Task));\r\n\r\n\r\n","\r\nimport {UPD_NOT_SAVED_DATA} from \"../variables/actionTypes\";\r\n\r\nexport function notSavedData(value) {\r\n  return {\r\n    type: UPD_NOT_SAVED_DATA,\r\n    value\r\n  };\r\n}","import React from \"react\";\r\n\r\nimport getTasks from '../redmine/getTasks';\r\nimport getTypeActivity from '../redmine/getTypeActivity';\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport Task from '../components/Task';\r\n\r\nimport { tasks } from \"../actionCreators/tasks\";\r\nimport { activities } from \"../actionCreators/activities\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasks,\r\n    activities: state.activities,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    dispatchTasks: (value) => dispatch(tasks(value)),\r\n    dispatchActivities: (value) => dispatch(activities(value)),\r\n  }\r\n};\r\n\r\nclass Tasks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.showCurrentComponent();\r\n    };\r\n\r\n  showCurrentComponent = () => {\r\n    let value = getTasks();\r\n    this.setTasks(value);\r\n\r\n    let activities = getTypeActivity();\r\n    this.setActivities(activities);\r\n  };\r\n\r\n  setTasks = (response) => {\r\n    response.then(e => {\r\n      if (e) {\r\n        let tasks = e.data.issues;\r\n        this.props.dispatchTasks(tasks);\r\n\r\n        this.setLoaded();\r\n      } else {\r\n        console.log('Ошибка в setTasks. Попробуйте перезагрузить страницу');\r\n      }\r\n    });\r\n  };\r\n\r\n  setActivities = (response) => {\r\n    response.then(e => {\r\n      if (e) {\r\n        let activities = e.data.time_entry_activities;\r\n\r\n        let result = {};\r\n        activities.forEach(elem => result[elem.id] = elem.name);\r\n\r\n        this.props.dispatchActivities(result);     \r\n      }\r\n    });\r\n  }\r\n\r\n  setLoaded = () => {\r\n    this.setState({\r\n      isLoading: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let tasks = Object.values(this.props.tasks);\r\n\r\n    let tasksList = tasks.map((elem, index) => {\r\n      return (\r\n        <li key={index} className={'task'}>\r\n          <Task\r\n            id={elem.id}\r\n            subject={elem.subject}\r\n            priority={elem.priority.name}\r\n            project={elem.project.name}\r\n            status={elem.status.name}\r\n            start_date={elem.start_date}\r\n            due_date={elem.due_date}\r\n            estimated_hours={elem.estimated_hours}\r\n            spent_hours={elem.spent_hours}\r\n            activities={this.props.activities}\r\n          />\r\n        </li>\r\n      )\r\n    });\r\n\r\n    let skeleton = (\r\n      <Box\r\n        component={\"li\"}\r\n        my={3}\r\n      >\r\n        <Skeleton height={40} />\r\n        <Skeleton height={40} />\r\n        <Skeleton height={40} />\r\n      </Box>\r\n    );\r\n\r\n    return (\r\n      <ul className=\"clear-list tasks-list\">\r\n        {this.state.isLoading ?\r\n          <>\r\n            {skeleton}\r\n            {skeleton}\r\n            {skeleton}\r\n          </>\r\n          :\r\n          tasksList\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks);","import {UPD_TASKS} from \"../variables/actionTypes\";\r\n\r\nexport function tasks(value) {\r\n  return {\r\n    type: UPD_TASKS,\r\n    value\r\n  }\r\n}","// activities\r\n\r\nimport {UPD_ACTIVITIES} from \"../variables/actionTypes\";\r\n\r\nexport function activities(value) {\r\n  return {\r\n    type: UPD_ACTIVITIES,\r\n    value\r\n  };\r\n}","// PieChart\r\n\r\n\r\nimport React from \"react\";\r\n\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport {\r\n  CircularProgressbarWithChildren,\r\n  buildStyles\r\n} from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n\r\nclass PieChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box className={'pie-chart'}>\r\n        <CircularProgressbarWithChildren\r\n          value={this.props.percent}\r\n          styles={buildStyles({\r\n            textColor: \"#F6F6FF\",\r\n            pathColor: \"#59D366\",\r\n            trailColor: \"#29333A\"\r\n          })}\r\n        >\r\n          <Typography color=\"textPrimary\" variant=\"caption\">\r\n            {this.props.text}\r\n          </Typography>\r\n          <Typography variant=\"h4\" color=\"textSecondary\">\r\n            {this.props.isLoading ? <CircularProgress color=\"secondary\" size={20}/> : this.props.hours}\r\n          </Typography>\r\n        </CircularProgressbarWithChildren>\r\n\r\n        <Box m={3}>\r\n          <Typography variant=\"h6\" color=\"textPrimary\">\r\n            {this.props.percent}%\r\n          </Typography>\r\n        </Box>\r\n\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PieChart;\r\n","import axios from \"axios\";\r\n\r\n\r\nfunction getStatistics(period) {\r\n  const url = localStorage.getItem('url');\r\n  const api = localStorage.getItem('api');\r\n\r\n  return axios.get(`${url}/time_entries.json?key=${api}&${period}&user_id=me&=hours&limit=100`)\r\n    .then(response => {\r\n      return response;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"getStatistics => error \\n\", error);\r\n    });\r\n}\r\n\r\nexport default getStatistics;","// commandGetStatistics\r\n\r\nconst date = new Date();\r\n\r\nconst _year = date.getFullYear();\r\nconst _month = (date.getMonth() + 1) >= 10 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`; // чтобы отчёт начинался с 1, а не с 0\r\nconst _day = date.getDate() >= 10 ? date.getDate() : `0${date.getDate()}`;\r\nconst _weekday = date.getDay() === 0 ? 6 : date.getDay() - 1; // чтобы начинать отсчёт с Пн, а не в Вс\r\nconst _firstDayWeek = (+_day - +_weekday) >= 10 ? +_day - +_weekday : `0${+_day - +_weekday}`;\r\n\r\nconst today = `${_year}-${_month}-${_day}`;\r\nconst weekStarted = `${_year}-${_month}-${_firstDayWeek}`;\r\n// const monthStarted = `${_year}-${_month}-01`;\r\n\r\nconst getMonthCommands = () => {\r\n  const n1 = 7;\r\n  const n2 = 14;\r\n  const n3 = 21;\r\n  let lastN = '01';\r\n\r\n  let monthCommands = [];\r\n\r\n  if (_day > n1) {\r\n    let n = n1 < 10 ? `0${n1}` : n1;\r\n    let command = `from=${_year}-${_month}-${lastN}&to=${_year}-${_month}-${n}`;\r\n    lastN = (n1 + 1) < 10 ? `0${n1 + 1}` : n1 + 1;\r\n    monthCommands.push(command);\r\n  }\r\n\r\n  if (_day > n2) {\r\n    let n = n2 < 10 ? `0${n2}` : n2;\r\n    let command = `from=${_year}-${_month}-${lastN}&to=${_year}-${_month}-${n}`;\r\n    lastN = (n2 + 1) < 10 ? `0${n2 + 1}` : n2 + 1;\r\n    monthCommands.push(command);\r\n  }\r\n\r\n  if (_day > n3) {\r\n    let n = n3 < 10 ? `0${n3}` : n3;\r\n    let command = `from=${_year}-${_month}-${lastN}&to=${_year}-${_month}-${n}`;\r\n    lastN = (n3 + 1) < 10 ? `0${n3 + 1}` : n3 + 1;\r\n    monthCommands.push(command);\r\n  }\r\n\r\n  const lastCommandForMonth = `from=${_year}-${_month}-${lastN}&to=${_year}-${_month}-${_day}`;\r\n  monthCommands.push(lastCommandForMonth);\r\n\r\n  return monthCommands;\r\n};\r\n\r\n// *** export\r\nexport const periodToday = `from=${today}&to=${today}`;\r\nexport const periodWeek = `from=${weekStarted}&to=${today}`;\r\nexport const periodMonth = getMonthCommands();\r\n","import React from \"react\";\r\n\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\n\r\nimport PieChart from '../components/PieChart';\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nimport getStatistics from \"../redmine/getStatistics\";\r\nimport {\r\n  periodToday,\r\n  periodWeek,\r\n  periodMonth\r\n} from \"../functions/commandGetStatistics\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {statistics} from \"../actionCreators/statistics\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    day: state.statistics.day,\r\n    week: state.statistics.week,\r\n    month: state.statistics.month\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    dispatchStatistics: (name, value) => dispatch(statistics(name, value)),\r\n  };\r\n};\r\n\r\nclass Statistics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoadingDay: true,\r\n      isLoadingWeek: true,\r\n      isLoadingMonth: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatchStatistics(\"month\", 0); // обнулить статистику за месяц\r\n\r\n    this.showCurrentComponent(periodToday, \"day\", 'isLoadingDay');\r\n    this.showCurrentComponent(periodWeek, \"week\", 'isLoadingWeek');\r\n    // this.showCurrentComponent(periodMonth, \"month\", 'isLoadingMonth');\r\n\r\n    //TODO поискать другой способ вывода статистики за месяц\r\n    // из-за лимита в 100 результатов приходится отправлять несколько запросов,\r\n    // а потом соединять результат\r\n    periodMonth.forEach((elem, index) => {\r\n      if (index === periodMonth.length - 1) {\r\n        this.showCurrentComponent(elem, \"month\", 'isLoadingMonth');\r\n      } else {\r\n        this.showCurrentComponent(elem, \"month\");\r\n      }\r\n    })\r\n  };\r\n\r\n  showCurrentComponent = (period, name, isLoadingName) => {\r\n    let value = getStatistics(period);\r\n    this.setStatistics(name, value, isLoadingName);\r\n  };\r\n\r\n  setStatistics = (name, response, isLoadingName) => {\r\n    response.then(e => {\r\n      if (e) {\r\n        const data = e.data.time_entries;\r\n        let hours = 0;\r\n        data.forEach(elem => hours += elem.hours);\r\n        hours = +hours.toFixed(2);\r\n\r\n        if (name === 'month') {\r\n          this.props.dispatchStatistics(name, +(hours + this.props.month).toFixed(2));\r\n        } else {\r\n          this.props.dispatchStatistics(name, hours);\r\n        }\r\n\r\n        if (isLoadingName) this.setLoaded(isLoadingName);\r\n      } else {\r\n        alert('Ошибка в setStatistics. Попробуйте перезагрузить страницу');\r\n      }\r\n    });\r\n  };\r\n\r\n  setLoaded = (name) => {\r\n    this.setState({\r\n      [name]: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let dayPercent = (this.props.day * 100 / 8).toFixed(2);\r\n    let weekPercent = (this.props.week * 100 / 40).toFixed(2);\r\n    let monthPercent = (this.props.month * 100 / 160).toFixed(2);\r\n\r\n    return (\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <PieChart\r\n            percent={dayPercent}\r\n            text={'За день'}\r\n            hours={this.props.day}\r\n            isLoading={this.state.isLoadingDay}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <PieChart\r\n            percent={weekPercent}\r\n            text={'За неделю'}\r\n            hours={this.props.week}\r\n            isLoading={this.state.isLoadingWeek}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <PieChart\r\n            percent={monthPercent}\r\n            text={'За месяц'}\r\n            hours={this.props.month}\r\n            isLoading={this.state.isLoadingMonth}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);\r\n","// statistics\r\nimport {UPD_STATISTICS} from \"../variables/actionTypes\";\r\n\r\nexport function statistics(name, value) {\r\n  return {\r\n    type: UPD_STATISTICS,\r\n    name: name,\r\n    value: value\r\n  };\r\n}","\r\nimport {UPD_MODAL} from \"../variables/actionTypes\";\r\n\r\nexport function modal(show, title, text) {\r\n  return {\r\n    type: UPD_MODAL,\r\n    modal: {\r\n      show: show,\r\n      title: title,\r\n      text: text\r\n    }\r\n  };\r\n}","// Preloader\r\n\r\nimport React from \"react\";\r\n\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n\r\nclass Preloader extends React.Component {\r\n  render() {\r\n    return (\r\n      <Box bgcolor=\"primary.dark\" className={'preloader'}>\r\n        <CircularProgress color=\"secondary\" size={100} />\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Preloader;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { modal } from '../actionCreators/modal';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    show: state.application.modal.show,\r\n    title: state.application.modal.title,\r\n    text: state.application.modal.text,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    dispatchModal: (show, title, text) => dispatch(modal(show, title, text)),\r\n  };\r\n};\r\n\r\n\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  close = () => {\r\n    this.props.dispatchModal(false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.show}\r\n        onClose={this.close}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        {this.props.title && <DialogTitle>{this.props.title}</DialogTitle>}\r\n\r\n        {this.props.text &&\r\n          <DialogContent>\r\n            <DialogContentText >\r\n              {this.props.text}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n        }\r\n\r\n        <DialogActions>\r\n          <Button onClick={this.close} color=\"secondary\" autoFocus>\r\n            Закрыть\r\n          </Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n\r\n","\r\nimport React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { mobileMenu } from \"../actionCreators/mobileMenu\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Redirect, Route, Switch, Prompt, Link } from 'react-router-dom';\r\nimport * as IconsLib from \"@material-ui/icons\";\r\nimport { Divider } from \"@material-ui/core\";\r\n\r\nimport {gitHubPagesName} from '../variables/path';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    showMobileMenu: state.application.showMobileMenu,\r\n  }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    dispatchMobileMenu: (value) => dispatch(mobileMenu(value)),\r\n  }\r\n};\r\n\r\nclass MobileMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  closeDrawer = () => {\r\n    this.props.dispatchMobileMenu(false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={this.props.showMobileMenu}\r\n        onClose={this.closeDrawer}\r\n      >\r\n\r\n        <List>\r\n          <ListItem  >\r\n            <Link to={`/${gitHubPagesName}/tasks`} className={\"clear-link-style fullwidth\"} >\r\n              <Button color=\"inherit\" fullWidth onClick={this.closeDrawer}>\r\n                Задачи\r\n              </Button>\r\n            </Link>\r\n          </ListItem>\r\n\r\n          <ListItem  >\r\n            <Link to={`/${gitHubPagesName}/statistics`} className={\"clear-link-style fullwidth\"}>\r\n              <Button color=\"inherit\" fullWidth onClick={this.closeDrawer}>\r\n                Статистика\r\n              </Button>\r\n            </Link>\r\n          </ListItem>\r\n\r\n        </List>\r\n\r\n      </Drawer >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileMenu);\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport PageHeader from \"./components/PageHeader\";\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport Login from './pages/Login';\r\nimport Tasks from './pages/Tasks';\r\nimport Statistics from './pages/Statistics';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport getAuthorization from './redmine/getAuthorization';\r\nimport { Redirect, Route, Switch, Prompt, Link } from 'react-router-dom';\r\n\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport MyTheme from './MyTheme';\r\nimport { storeAuthorization } from \"./actionCreators/storeAuthorization\";\r\nimport { storeLogin } from \"./actionCreators/storeLogin\";\r\nimport { modal } from './actionCreators/modal';\r\n\r\nimport Preloader from './components/Preloader';\r\nimport Notice from './components/Notice';\r\nimport Modal from './components/Modal';\r\nimport MobileMenu from './components/MobileMenu';\r\n\r\nimport {gitHubPagesName} from './variables/path';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authorized: state.authorized,\r\n    notSavedData: state.application.notSavedData,\r\n  }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    dispatchAuthorization: (value) => dispatch(storeAuthorization(value)),\r\n    dispatchLogin: (value) => dispatch(storeLogin(value)),\r\n    dispatchModal: (show, title, text) => dispatch(modal(show, title, text)),\r\n  }\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: true,\r\n      showDrawer: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = localStorage.getItem('url');\r\n    const api = localStorage.getItem('api');\r\n\r\n    if (url && api) {\r\n      let value = getAuthorization(\"api\", url, api);\r\n      this.setAuthorization(value);\r\n    } else {\r\n      this.setState({ isLoading: false });\r\n    }\r\n\r\n    window.addEventListener(\"beforeunload\", this.handleWindowBeforeUnload);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.handleWindowBeforeUnload);\r\n  };\r\n\r\n  // закрытие/перезагрузка при несохранённых данных\r\n  handleWindowBeforeUnload = (e) => {\r\n    if (this.props.notSavedData) {\r\n      e.preventDefault();\r\n      e.returnValue = true;\r\n\r\n      // let title = 'Данные не сохранены';\r\n      // let text = 'Нужно остановить таймер, чтобы отправить данные в Redmine.';\r\n      // this.props.dispatchModal(true, title, text);\r\n    }\r\n  };\r\n\r\n  setAuthorization = (response) => {\r\n    response.then(e => {\r\n      if (e) {\r\n        this.props.dispatchAuthorization(true);\r\n\r\n        const login = localStorage.getItem('login');\r\n        this.props.dispatchLogin(login);\r\n\r\n        this.setState({ isLoading: false });\r\n      } else {\r\n        if (localStorage.getItem('url')) localStorage.removeItem('url');\r\n        if (localStorage.getItem('api')) localStorage.removeItem('api');\r\n        alert('Ошибка при авторизации.  Попробуйте снова');\r\n      }\r\n    });\r\n  };\r\n\r\n  toggleDrawer = (side, open) => e => {\r\n    if (e.type === 'keydown' && (e.key === 'Tab' || e.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ showDrawer: open });\r\n  }\r\n\r\n  render() {\r\n    let authorized = this.props.authorized;\r\n\r\n    return (\r\n      <MuiThemeProvider theme={MyTheme}>\r\n        <Box className=\"App\" bgcolor=\"primary.main\">\r\n\r\n          {this.state.isLoading && <Preloader />}\r\n\r\n          {authorized && <PageHeader />}\r\n\r\n          <Box component={'main'} className={'main-content'}>\r\n\r\n            {/* TODO выбрать между этими блоками */}\r\n            {authorized ?\r\n              <Switch>\r\n                {/*<Route exact path='/' render={() => (authorized ? (<Tasks />) : (<Redirect to=\"/login\" />))} />*/}\r\n                {/*<Route exact path='/tasks' render={() => (authorized ? (<Tasks />) : (<Redirect to=\"/login\" />))} />*/}\r\n                {/*<Route exact path='/statistics' render={() => (authorized ? (<Statistics />) : (<Redirect to=\"/login\" />))} />*/}\r\n                {/*<Route exact path='/login' render={() => (authorized ? (<Redirect to=\"/\" />) : (<Login />))} />*/}\r\n\r\n                <Route exact path='/' render={() => (authorized ? (<Tasks />) : (<Redirect to={`/${gitHubPagesName}/login`} />))} />\r\n                <Route exact path='/tasks' render={() => (authorized ? (<Tasks />) : (<Redirect to={`/${gitHubPagesName}/login`} />))} />\r\n                <Route exact path='/statistics' render={() => (authorized ? (<Statistics />) : (<Redirect to={`/${gitHubPagesName}/login`} />))} />\r\n                <Route exact path='/login' render={() => (authorized ? (<Redirect to={`/${gitHubPagesName}/`} />) : (<Login />))} />\r\n\r\n                <Route exact path={`/${gitHubPagesName}/`} render={() => (authorized ? (<Tasks />) : (<Redirect to={`/${gitHubPagesName}/login`} />))} />\r\n                <Route exact path={`/${gitHubPagesName}/tasks`} render={() => (authorized ? (<Tasks />) : (<Redirect to={`/${gitHubPagesName}/login`} />))} />\r\n                <Route exact path={`/${gitHubPagesName}/statistics`} render={() => (authorized ? (<Statistics />) : (<Redirect to={`/${gitHubPagesName}/login`} />))} />\r\n                <Route exact path={`/${gitHubPagesName}/login`} render={() => (authorized ? (<Redirect to={`/${gitHubPagesName}/`} />) : (<Login />))} />\r\n\r\n              </Switch>\r\n              :\r\n              <Login />\r\n            }\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n\r\n        <Notice />\r\n        <Modal />\r\n        <MobileMenu />\r\n        <Prompt\r\n          when={this.props.notSavedData}\r\n          message={`Данные не сохранены. Нужно остановить таймер, чтобы отправить данные в Redmine.`}\r\n        />\r\n\r\n\r\n      </MuiThemeProvider >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {UPD_LOGIN} from \"../variables/actionTypes\";\r\n\r\nexport function storeLogin(login) {\r\n  return {\r\n    type: UPD_LOGIN,\r\n    login: login\r\n  };\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\n\r\n// Начальные значения\r\nexport const startingValue = {\r\n  authorized: false,\r\n\r\n  // информация о пользователе\r\n  user: {\r\n    userLogin: '',\r\n    api_key: '',\r\n    redmineUrl: '',\r\n  },\r\n\r\n  // задачи\r\n  tasks: {},\r\n\r\n  // типы активности\r\n  activities: {},\r\n\r\n  // статистика\r\n  statistics: {\r\n    day: 0,\r\n    week: 0,\r\n    month: 0,\r\n  },\r\n\r\n  application: {\r\n    notSavedData: false,\r\n\r\n    showMobileMenu: false,\r\n    \r\n    modal: {\r\n      show: false,\r\n      title: '',\r\n      text: ''\r\n    },\r\n\r\n    notice: {\r\n      show: false,\r\n      type: '',\r\n      text: ''\r\n    }\r\n  },\r\n};","// mainStore\r\n\r\n/**\r\n * Стор (Store) — это объект, который соединяет части вместе. \r\n * \r\n * Стор берет на себя следующие задачи: \r\n * содержит состояние приложения (application state);\r\n * предоставляет доступ к состоянию с помощью getState();\r\n * предоставляет возможность обновления состояния с помощью dispatch(action);\r\n * Обрабатывает отмену регистрации слушателей с помощью функции, возвращаемой subscribe(listener).\r\n */\r\n\r\n\r\nimport { createStore } from 'redux';\r\nimport reducer from '../reducers/reducer';\r\nimport { startingValue } from '../startingValue';\r\n\r\nconst store = createStore(reducer, startingValue);\r\n\r\nexport default store;","// Редюсер (reducer) — это чистая функция, которая принимает предыдущее\r\n// состояние и экшен (state и action) и возвращает следующее состояние (новую версию предыдущего).\r\n\r\n\r\nimport {\r\n  UPD_TASKS,\r\n  UPD_AUTHORIZED,\r\n  UPD_USER_DATA,\r\n  UPD_APPLICATION_STATUS,\r\n  UPD_STATISTICS,\r\n  UPD_LOGIN,\r\n  UPD_ACTIVITIES,\r\n  UPD_NOTICE,\r\n  UPD_MODAL,\r\n  UPD_NOT_SAVED_DATA,\r\n  UPD_MOBILE_MENU,\r\n} from '../variables/actionTypes';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    // изменить какой-то из параметров UPD_APPLICATION_STATUS\r\n    case UPD_APPLICATION_STATUS:\r\n      return Object.assign({}, state, {\r\n        application: {\r\n          ...state.application,\r\n          states: {\r\n            ...state.application.states,\r\n            [action.name]: action.value !== undefined ? action.value : !state.application.states[action.name]\r\n          }\r\n        }\r\n      });\r\n    // изменить UPD_TASKS\r\n    case UPD_TASKS:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        'tasks': action.value\r\n      });\r\n    // изменить UPD_NOTICE\r\n    case UPD_NOTICE:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        'application': {\r\n          ...state.application,\r\n          'notice': {\r\n            show: action.notice.show !== undefined ? action.notice.show : false,\r\n            type: action.notice.type !== undefined ? action.notice.type : state.application.notice.type,\r\n            text: action.notice.text !== undefined ? action.notice.text : state.application.notice.text\r\n          }\r\n        }\r\n      });\r\n    // изменить UPD_MODAL\r\n    case UPD_MODAL:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        'application': {\r\n          ...state.application,\r\n          'modal': {\r\n            show: action.modal.show !== undefined ? action.modal.show : false,\r\n            title: action.modal.title !== undefined ? action.modal.title : state.application.modal.title,\r\n            text: action.modal.text !== undefined ? action.modal.text : state.application.modal.text\r\n          }\r\n        }\r\n      });\r\n    // изменить notSavedData\r\n    case UPD_NOT_SAVED_DATA:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        'application': {\r\n          ...state.application,\r\n          'notSavedData': action.value !== undefined ? action.value : !state.application.value,\r\n        }\r\n      });\r\n    // изменить UPD_MOBILE_MENU\r\n    case UPD_MOBILE_MENU:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        'application': {\r\n          ...state.application,\r\n          'showMobileMenu': action.value !== undefined ? action.value : !state.application.showMobileMenu,\r\n        }\r\n      });\r\n    // изменить UPD_LOGIN\r\n    case UPD_LOGIN:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        'user': {\r\n          ...state.user,\r\n          userLogin: action.login,\r\n        },\r\n      });\r\n    // изменить UPD_STATISTICS\r\n    case UPD_STATISTICS:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        'statistics': {\r\n          ...state.statistics,\r\n          [action.name]: action.value !== undefined ? action.value : 0\r\n        }\r\n      });\r\n    // авторизован ли пользователь\r\n    case UPD_AUTHORIZED:\r\n      return Object.assign({}, state, {\r\n        'authorized': action.authorized !== undefined ? action.authorized : !state.authorized,\r\n      });\r\n    // авторизован ли пользователь\r\n    case UPD_ACTIVITIES:\r\n      return Object.assign({}, state, {\r\n        'activities': action.value,\r\n      });\r\n    // авторизован ли пользователь\r\n    case UPD_USER_DATA:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        'user': {\r\n          userLogin: action.login ? action.login : '',\r\n          api_key: action.key ? action.key : '',\r\n          redmineUrl: action.url ? action.url : '',\r\n        }\r\n      });\r\n    default:\r\n      return state\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { startingValue } from './startingValue';\n\nimport mainStore from './store/mainStore';\nimport { Provider } from \"react-redux\";\n\nimport { BrowserRouter } from 'react-router-dom';\n\n// Начальные значения\nconst data = startingValue;\n\nReactDOM.render(\n  <Provider store={mainStore}>\n    <BrowserRouter>\n      <App data={data} />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'));\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}